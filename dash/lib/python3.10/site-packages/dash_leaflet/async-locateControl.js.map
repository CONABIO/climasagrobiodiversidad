{"version":3,"file":"async-locateControl.js","mappings":";8pCAKAA,EAAAA,UAMMC,EAAAA,SAAAA,kvBAEJ,WAEE,MAAmCC,KAAnC,MAAQC,EAAR,UAAiBC,EAAjB,gBACQC,EAAQH,KAAKI,MAArB,YACMC,EAAK,SAAX,GACAA,EAAAA,MALkB,GAOlB,GACEA,EAAAA,8BAIJ,WACE,oCAfEN,CAAsBO,EAAAA,WAoB5B,WAAeC,EAAAA,EAAAA,IAAf,GACAR,EAAAA,UAAAA,EAAAA,yBChCUS,EAAOC,QAAU,EAAQ,KAAR,EAA4C,IAK/DC,KAAK,CAACF,EAAOG,GAAI,6YAA8Y,0BCLva,WAMC,SAAUC,EAASC,GAMZ,EAAO,CAAC,cAAmB,0BAAP,EAAF,GAAS,oCAYT,IAAXA,GAA0BA,EAAOC,IACxCD,EAAOC,EAAEC,QAAQC,OAASJ,EAAQE,IAnB1C,EAqBG,SAAUA,GACT,IAAIG,EAA6B,SAASC,EAAQC,EAASC,IACvDA,EAAaA,EAAWC,MAAM,MACnBC,SAAQ,SAASC,GACxBT,EAAEU,QAAQN,GAAQO,KAAKzB,KAAMmB,EAASI,OAI1CG,EAAa,SAASC,EAAIC,GAASX,EAA2B,WAAYU,EAAIC,IAC9EC,EAAgB,SAASF,EAAIC,GAASX,EAA2B,cAAeU,EAAIC,IAKpFE,EAAiBhB,EAAEiB,OAAOC,OAAO,CACjCC,WAAY,SAAUC,EAAQjC,GAC1Ba,EAAEqB,KAAKC,WAAWpC,KAAMC,GACxBD,KAAKqC,QAAUH,EACflC,KAAKsC,cAMTA,WAAY,WACR,IAAIC,EAAMvC,KAAKC,QAEXuC,EAAQ,QAEMC,IAAdF,EAAIG,QACJF,GAAS,UAAUD,EAAIG,MAAM,UAEdD,IAAfF,EAAII,SACJH,GAAS,gBAAgBD,EAAII,OAAO,UAElBF,IAAlBF,EAAIK,YACJJ,GAAS,QAAQD,EAAIK,UAAU,UAEXH,IAApBF,EAAIM,cACJL,GAAS,gBAAgBD,EAAIM,YAAY,UAEzBJ,IAAhBF,EAAIO,UACJN,GAAS,WAAWD,EAAIO,QAAQ,KAGpC,IAAIC,EAAO/C,KAAKgD,YAAYT,EAAKC,GAEjCxC,KAAKiD,cAAgBnC,EAAEoC,QAAQ,CAC3B3B,UAAWwB,EAAKxB,UAChB4B,KAAMJ,EAAKK,IACXC,SAAU,CAACN,EAAKO,EAAEP,EAAKQ,KAG3BvD,KAAKwD,QAAQxD,KAAKiD,gBAQtBD,YAAa,SAAS/C,EAASuC,GAC3B,IAAIiB,EAAIxD,EAAQyD,OAEZC,EAAIF,EADAxD,EAAQ0C,OAEZiB,EAAS,EAAJD,EAIT,MAAO,CACHpC,UAAW,kCACX6B,IALM,kDAAkDQ,EAAG,aAAaA,EAAG,6BAA6BD,EAAE,KAAKA,EAAE,IAAIC,EAAG,IAAIA,EAAtH,gBACIH,EAAE,YAAYjB,EADlB,aAMNc,EAAGM,EACHL,EAAGK,IAIXC,SAAU,SAASrB,GACf1B,EAAEqB,KAAKC,WAAWpC,KAAMwC,GACxBxC,KAAKsC,gBAITwB,EAAgBhC,EAAeE,OAAO,CACtCC,WAAY,SAAUC,EAAQ6B,EAAS9D,GACnCa,EAAEqB,KAAKC,WAAWpC,KAAMC,GACxBD,KAAKqC,QAAUH,EACflC,KAAKgE,SAAWD,EAChB/D,KAAKsC,cAGT2B,WAAY,SAASF,GACjB/D,KAAKgE,SAAWD,GAMpBf,YAAa,SAAS/C,EAASuC,GAC3B,IAAIiB,EAAIxD,EAAQyD,OACZJ,EAAKrD,EAAQiE,MAAQjE,EAAQ0C,OAC7BY,EAAuC,GAAlCE,EAAExD,EAAQkE,MAAQlE,EAAQ0C,QAC/ByB,EAAO,SAAUnE,EAAQiE,MAAM,EAAG,IAAIjE,EAAQkE,MAAM,MAAM,EAAI,OAKlE,MAAO,CACH5C,UAAW,iCACX6B,IALM,kDAAkD,EAAI,aAAaG,EAAE,6BAA8BD,EAAE,EAAG,MAAMA,EAAE,IAAIC,EAApH,8BAD0BvD,KAAKgE,SAC/B,kBACEI,EAAK,YAAY5B,EADnB,aAMNc,EAAGA,EACHC,EAAGA,MAMXxD,EAAgBe,EAAEC,QAAQiB,OAAO,CACjC/B,QAAS,CAELoE,SAAU,UAEVC,WAAO7B,EAkBP8B,QAAS,iBAETC,sBAAsB,EAE7BC,kBAAkB,EAWXC,kBAAmB,SAAUC,GACzB,OAAOA,EAAcC,QAGzBC,OAAO,EAQPC,cAAe,CAEXC,OAAQ,OAERC,UAAW,UAKXC,mBAAoB,UAOxBC,oBAAoB,EAKpBC,eAAe,EAEfC,YAAY,EAEZC,YAAY,EAEZC,aAAa,EAEbC,YAAazD,EAEb0D,aAAc1B,EAEd2B,YAAa,CACTlE,UAAa,gCACbmB,MAAa,UACbE,UAAa,UACbC,YAAa,IACbF,OAAa,GAGjB+C,YAAa,CACTnE,UAAa,gCACbmB,MAAa,OACbE,UAAa,UACbC,YAAa,EACbF,OAAa,EACbG,QAAa,EACbY,OAAa,GAGjBiC,aAAc,CACV/C,UAAa,UACbC,YAAa,EACbF,OAAa,EACbD,MAAa,OACbI,QAAa,EACbY,OAAa,EACbQ,MAAa,EACbC,MAAa,GAMjByB,kBAAmB,GACnBC,kBAAmB,GAInBC,mBAAoB,GAEpB/C,KAAM,mBACNgD,YAAa,wBAEbC,eAAgB,OAEhBC,cAAe,CAAC,EAAG,GAEnBC,QAAQ,EAMRC,qBAAsB,SAAUC,EAAWnG,GACvC,IAAIoG,EAAOvF,EAAEU,QAAQ8E,OAAO,IAAK,2CAA4CF,GAG7E,OAFAC,EAAKE,MAAQtG,EAAQuG,QAAQD,MAEtB,CAAEF,KAAMA,EAAMtD,KADVjC,EAAEU,QAAQ8E,OAAOrG,EAAQ+F,eAAgB/F,EAAQ8C,KAAMsD,KAItEI,gBAAiB,SAASC,EAAKC,GAC3BC,MAAMF,EAAIG,UAMdC,2BAA4B,SAASH,GACjCA,EAAQI,OACRH,MAAMD,EAAQ1G,QAAQuG,QAAQQ,sBAGlCC,WAAW,EACXT,QAAS,CACLD,MAAO,qBACPW,WAAY,SACZC,SAAU,OACVC,MAAO,mDACPJ,oBAAqB,sDAGzBK,cAAe,CACXC,QAASC,EAAAA,EACTC,OAAO,EACPjD,SAAS,IAKjBtC,WAAY,SAAUhC,GAElB,IAAK,IAAIwH,KAAKxH,EACqB,iBAApBD,KAAKC,QAAQwH,GACpB3G,EAAEkB,OAAOhC,KAAKC,QAAQwH,GAAIxH,EAAQwH,IAElCzH,KAAKC,QAAQwH,GAAKxH,EAAQwH,GAKlCzH,KAAKC,QAAQ4F,kBAAoB/E,EAAEkB,OAAO,GAAIhC,KAAKC,QAAQyF,YAAa1F,KAAKC,QAAQ4F,mBACrF7F,KAAKC,QAAQ2F,kBAAoB9E,EAAEkB,OAAO,GAAIhC,KAAKC,QAAQwF,YAAazF,KAAKC,QAAQ2F,mBACrF5F,KAAKC,QAAQ6F,mBAAqBhF,EAAEkB,OAAO,GAAIhC,KAAKC,QAAQ0F,aAAc3F,KAAKC,QAAQ6F,qBAM3F4B,MAAO,SAAUvH,GACb,IAAIiG,EAAYtF,EAAEU,QAAQ8E,OAAO,MAC7B,sDACJtG,KAAK2H,WAAavB,EAClBpG,KAAK4H,KAAOzH,EACZH,KAAK6H,OAAS7H,KAAKC,QAAQqE,OAAS,IAAIxD,EAAEgH,WAC1C9H,KAAK6H,OAAOE,MAAM5H,GAClBH,KAAKgI,YAASvF,EACdzC,KAAKiI,gBAAkB,KACvBjI,KAAKkI,YAAc,KAEnB,IAAIC,EAAcnI,KAAKC,QAAQkG,qBAAqBC,EAAWpG,KAAKC,SAcpE,OAbAD,KAAKoI,MAAQD,EAAY9B,KACzBrG,KAAKqI,MAAQF,EAAYpF,KAEzBjC,EAAEwH,SACGC,GAAGvI,KAAKoI,MAAO,QAAStH,EAAEwH,SAASE,iBACnCD,GAAGvI,KAAKoI,MAAO,QAAStH,EAAEwH,SAASG,gBACnCF,GAAGvI,KAAKoI,MAAO,QAASpI,KAAK0I,SAAU1I,MACvCuI,GAAGvI,KAAKoI,MAAO,WAAYtH,EAAEwH,SAASE,iBAE3CxI,KAAK2I,kBAEL3I,KAAK4H,KAAKW,GAAG,SAAUvI,KAAK4I,QAAS5I,MAE9BoG,GAMXsC,SAAU,WACN1I,KAAK6I,cAAe,EACpB,IAAIC,EAAgB9I,KAAK+I,eAIzB,GAHA/I,KAAKgJ,aAAc,EACnBhJ,KAAKiJ,aAAc,EAEfjJ,KAAKkJ,UAAYlJ,KAAKgI,OAEtBhI,KAAK+G,YACF,GAAI/G,KAAKkJ,cAA2BzG,IAAhBzC,KAAKgI,OAAsB,CAClD,IAAImB,EAAYnJ,KAAKC,QAAQ6E,cACzBsE,EAAWD,EAAUnE,UAUzB,OATIhF,KAAK4H,KAAKyB,YAAYC,SAAStJ,KAAKgI,OAAO9F,UAC3CkH,EAAWN,EAAeK,EAAUpE,OAASoE,EAAUlE,oBAIvDkE,EAAUC,KACVA,EAAWD,EAAUC,IAGjBA,GACJ,IAAK,UACDpJ,KAAKuE,UACL,MACJ,IAAK,OACDvE,KAAK+G,OACD/G,KAAKC,QAAQiF,qBACLlF,KAAKC,QAAQ4E,MAAQ7E,KAAK4H,KAAK2B,YAAcvJ,KAAK4H,KAAK4B,WAC7DC,KAAKzJ,KAAK4H,KAAZ8B,CAAkB1J,KAAKkI,mBAK/BlI,KAAKC,QAAQiF,qBACflF,KAAKkI,YAAclI,KAAK4H,KAAKyB,aAE/BrJ,KAAK2J,QAGT3J,KAAK4J,yBAQTD,MAAO,WACH3J,KAAK6J,YAED7J,KAAKgI,SACLhI,KAAK8J,YAAY9J,KAAK4H,MAGlB5H,KAAKC,QAAQsE,SACbvE,KAAKuE,WAGbvE,KAAK4J,yBAST7C,KAAM,WACF/G,KAAK+J,cAEL/J,KAAKgK,gBACLhK,KAAK2I,kBAEL3I,KAAKiK,iBAMTC,cAAe,WACXlK,KAAKgJ,aAAc,EACnBhJ,KAAK4J,wBACL5J,KAAK8J,eAYTD,UAAW,WACP,IAAK7J,KAAKkJ,UACNlJ,KAAK4H,KAAKuC,OAAOnK,KAAKC,QAAQoH,eAC9BrH,KAAKkJ,SAAU,EAGflJ,KAAK4H,KAAKW,GAAG,gBAAiBvI,KAAKoK,iBAAkBpK,MACrDA,KAAK4H,KAAKW,GAAG,gBAAiBvI,KAAKqK,iBAAkBrK,MACrDA,KAAK4H,KAAKW,GAAG,YAAavI,KAAKsK,QAAStK,MACxCA,KAAK4H,KAAKW,GAAG,YAAavI,KAAKuK,QAASvK,MACxCA,KAAK4H,KAAKW,GAAG,UAAWvI,KAAKwK,WAAYxK,MACrCA,KAAKC,QAAQqF,aAAa,CAC1B,IAAImF,EAAS,gCAAiC5J,OAC9C,GAAI4J,GAAW,wBAAyB5J,OAAS,CAC7C,IAAI6J,EAAQ1K,KACR2K,EAAoB,WACpB7J,EAAEwH,SAASC,GAAG1H,OAAQ4J,EAAS,4BAA8B,oBAAqBC,EAAME,qBAAsBF,IAE9GG,wBAA8E,mBAA7CA,uBAAuBC,kBACxDD,uBAAuBC,oBAAoBC,MAAK,SAAUC,GAC9B,YAApBA,GACAL,OAIRA,OAYpBZ,YAAa,WACT/J,KAAK4H,KAAKqD,aACVjL,KAAKkJ,SAAU,EAEVlJ,KAAKC,QAAQkF,gBACdnF,KAAKgI,YAASvF,GAIlBzC,KAAK4H,KAAKsD,IAAI,gBAAiBlL,KAAKoK,iBAAkBpK,MACtDA,KAAK4H,KAAKsD,IAAI,gBAAiBlL,KAAKqK,iBAAkBrK,MACtDA,KAAK4H,KAAKsD,IAAI,YAAalL,KAAKsK,QAAStK,MACzCA,KAAK4H,KAAKsD,IAAI,YAAalL,KAAKuK,QAASvK,MACzCA,KAAK4H,KAAKsD,IAAI,UAAWlL,KAAKwK,WAAYxK,MACtCA,KAAKC,QAAQqF,cACbtF,KAAKiI,gBAAkB,KACnB,gCAAiCpH,OACjCC,EAAEwH,SAAS4C,IAAIrK,OAAQ,4BAA6Bb,KAAK4K,qBAAsB5K,MACxE,wBAAyBa,QAChCC,EAAEwH,SAAS4C,IAAIrK,OAAQ,oBAAqBb,KAAK4K,qBAAsB5K,QAQnFuE,QAAS,WAEL,GADAvE,KAAK8J,cACD9J,KAAKmL,sBACLnL,KAAKgI,YAASvF,EACdzC,KAAKC,QAAQ6G,2BAA2B9G,WAEtD,GAAIA,KAAK6I,eAAkD,IAAlC7I,KAAKC,QAAQwE,kBAChBiF,EAAI1J,KAAKC,QAAQ4E,MAAQ7E,KAAK4H,KAAK/C,MAAQ7E,KAAK4H,KAAKrD,SACvDkF,KAAKzJ,KAAK4H,KAAZ8B,CAAkB,CAAC1J,KAAKgI,OAAOoD,SAAUpL,KAAKgI,OAAOqD,WAAYrL,KAAKC,QAAQwE,uBAElF,GAAIzE,KAAKC,QAAQuE,sBACTkF,EAAI1J,KAAKC,QAAQ4E,MAAQ7E,KAAK4H,KAAK/C,MAAQ7E,KAAK4H,KAAK0D,OACvD7B,KAAKzJ,KAAK4H,KAAZ8B,CAAkB,CAAC1J,KAAKgI,OAAOoD,SAAUpL,KAAKgI,OAAOqD,gBAClD,CACH,IAAI3B,EAAI1J,KAAKC,QAAQ4E,MAAQ7E,KAAK4H,KAAK2B,YAAcvJ,KAAK4H,KAAK4B,UAE/DxJ,KAAKuL,cAAe,EACpB7B,EAAED,KAAKzJ,KAAK4H,KAAZ8B,CAAkB1J,KAAKC,QAAQyE,kBAAkB1E,KAAKgI,QAAS,CAC3DwD,QAASxL,KAAKC,QAAQgG,cACtBqB,QAAStH,KAAKC,QAAQoH,cAAcC,UAExCxG,EAAEqB,KAAKsJ,kBAAiB,WAEpBzL,KAAKuL,cAAe,IACrBvL,QASf0L,aAAc,WACV,GAAK1L,KAAKgI,OAAV,CAIA,IAAI9F,EAASlC,KAAKgI,OAAO9F,OAEzB,GAAIlC,KAAKC,QAAQqF,aAAepD,GAAmC,OAAzBlC,KAAKiI,gBAA0B,CACrE,IAAI0D,EAAS3L,KAAK+I,eAAiB/I,KAAKC,QAAQ6F,mBAAqB9F,KAAKC,QAAQ0F,aAC7E3F,KAAK4L,UAGN5L,KAAK4L,SAASC,UAAU3J,GACxBlC,KAAK4L,SAAS3H,WAAWjE,KAAKiI,iBAE1BjI,KAAK4L,SAAS/H,UACd7D,KAAK4L,SAAS/H,SAAS8H,IAN3B3L,KAAK4L,SAAW,IAAI5L,KAAKC,QAAQuF,aAAatD,EAAQlC,KAAKiI,gBAAiB0D,GAAQ5D,MAAM/H,KAAK6H,SAWnG7H,KAAK4L,UAAc5L,KAAKC,QAAQqF,aAAwC,OAAzBtF,KAAKiI,kBACpDjI,KAAK4L,SAASE,WAAW9L,KAAK6H,QAC9B7H,KAAK4L,SAAW,QASxB9B,YAAa,gBACoBrH,IAAzBzC,KAAKgI,OAAO+D,WACZ/L,KAAKgI,OAAO+D,SAAW,GAG3B,IAcIC,EAAUC,EAdVvI,EAAS1D,KAAKgI,OAAO+D,SACrB7J,EAASlC,KAAKgI,OAAO9F,OAGzB,GAAIlC,KAAKC,QAAQmF,WAAY,CACzB,IAAI5C,EAAQxC,KAAK+I,eAAiB/I,KAAKC,QAAQ2F,kBAAoB5F,KAAKC,QAAQwF,YAE3EzF,KAAKkM,QAGNlM,KAAKkM,QAAQL,UAAU3J,GAAQiK,UAAUzI,GAAQG,SAASrB,GAF1DxC,KAAKkM,QAAUpL,EAAEsL,OAAOlK,EAAQwB,EAAQlB,GAAOuF,MAAM/H,KAAK6H,QAgBlE,GATI7H,KAAKC,QAAQiG,QACb8F,EAAWtI,EAAO2I,QAAQ,GAC1BJ,EAAQjM,KAAKC,QAAQuG,QAAQU,aAE7B8E,GAAqB,UAATtI,GAAoB2I,QAAQ,GACxCJ,EAAOjM,KAAKC,QAAQuG,QAAQW,UAI5BnH,KAAKC,QAAQoF,WAAY,CACzB,IAAIiH,EAAStM,KAAK+I,eAAiB/I,KAAKC,QAAQ4F,kBAAoB7F,KAAKC,QAAQyF,YAC5E1F,KAAKuM,SAGNvM,KAAKuM,QAAQV,UAAU3J,GAEnBlC,KAAKuM,QAAQ1I,UACb7D,KAAKuM,QAAQ1I,SAASyI,IAL1BtM,KAAKuM,QAAU,IAAIvM,KAAKC,QAAQsF,YAAYrD,EAAQoK,GAAQvE,MAAM/H,KAAK6H,QAU/E7H,KAAK0L,eAEL,IAAIc,EAAIxM,KAAKC,QAAQuG,QAAQY,MAC7B,SAASqF,IACL,MAAiB,iBAAND,EACA1L,EAAEqB,KAAKuK,SAASF,EAAG,CAACR,SAAUA,EAAUC,KAAMA,IACjC,mBAANO,EACPA,EAAE,CAACR,SAAUA,EAAUC,KAAMA,IAE7BO,EAGXxM,KAAKC,QAAQgH,WAAauF,GAAKxM,KAAKuM,SACpCvM,KAAKuM,QACAI,UAAUF,KACVG,OAAOf,UAAU3J,GAEtBlC,KAAKC,QAAQgH,WAAauF,GAAKxM,KAAK4L,UACpC5L,KAAK4L,SACAe,UAAUF,KACVG,OAAOf,UAAU3J,IAO9B+H,cAAe,WACXjK,KAAK6H,OAAOgF,cACZ7M,KAAKuM,aAAU9J,EACfzC,KAAKkM,aAAUzJ,GAOnBmG,QAAS,WACL5I,KAAK+G,OACL/G,KAAK4H,KAAKsD,IAAI,SAAUlL,KAAK4I,QAAS5I,OAM1C8M,mBAAoB,SAASC,IACpBC,MAAMC,WAAWF,KAAWG,SAASH,IACtCA,EAAQI,KAAKC,MAAML,GAEnB/M,KAAKiI,gBAAkB8E,EACvBjM,EAAEqB,KAAKsJ,iBAAiBzL,KAAK0L,aAAc1L,OAE3CA,KAAKiI,gBAAkB,MAO/BoF,2BAA4B,WACxBrN,KAAK8M,sBAMTlC,qBAAsB,SAAS0C,GACtBtN,KAAKkJ,UAINoE,EAAEC,qBAEFvN,KAAK8M,mBAAmBQ,EAAEC,sBACnBD,EAAEE,UAAYF,EAAEG,OAEvBzN,KAAK8M,mBAAmB,IAAMQ,EAAEG,SAOxCpD,iBAAkB,SAAS3D,GAEP,GAAZA,EAAIgH,MAAa1N,KAAKC,QAAQoH,cAAcG,QAIhDxH,KAAK+G,OACL/G,KAAKC,QAAQwG,gBAAgBC,EAAK1G,QAMtCoK,iBAAkB,SAASkD,GAEvB,KAAItN,KAAKgI,QACJhI,KAAKgI,OAAO9F,OAAOyL,MAAQL,EAAEpL,OAAOyL,KACpC3N,KAAKgI,OAAO9F,OAAO0L,MAAQN,EAAEpL,OAAO0L,KAChC5N,KAAKgI,OAAO+D,WAAauB,EAAEvB,WAI/B/L,KAAKkJ,QAAV,CAUA,OALAlJ,KAAKgI,OAASsF,EAEdtN,KAAK8J,cACL9J,KAAK4J,wBAEG5J,KAAKC,QAAQsE,SACjB,IAAK,OACGvE,KAAK6I,cACL7I,KAAKuE,UAET,MACJ,IAAK,WACIvE,KAAKgJ,aACNhJ,KAAKuE,UAET,MACJ,IAAK,iBACIvE,KAAKgJ,aAAgBhJ,KAAKiJ,aAC3BjJ,KAAKuE,UAET,MACJ,IAAK,SACDvE,KAAKuE,UAObvE,KAAK6I,cAAe,IAMxByB,QAAS,WAEDtK,KAAKgI,SAAWhI,KAAKuL,eACrBvL,KAAKgJ,aAAc,EACnBhJ,KAAK4J,wBACL5J,KAAK8J,gBAObS,QAAS,WAEDvK,KAAKgI,SAAWhI,KAAKuL,eACrBvL,KAAKiJ,aAAc,EACnBjJ,KAAK4J,wBACL5J,KAAK8J,gBAObU,WAAY,WACJxK,KAAKgI,QACLhI,KAAK0L,eAGL1L,KAAKgI,SAAWhI,KAAKuL,cAEjBvL,KAAKuM,UAAYvM,KAAK4H,KAAKyB,YAAYwE,KAAK,IAAIvE,SAAStJ,KAAKuM,QAAQuB,eACtE9N,KAAKgJ,aAAc,EACnBhJ,KAAK4J,wBACL5J,KAAK8J,gBAQjBf,aAAc,WACV,QAAK/I,KAAKkJ,UAImB,WAAzBlJ,KAAKC,QAAQsE,UAEmB,aAAzBvE,KAAKC,QAAQsE,SACZvE,KAAKgJ,YACmB,mBAAzBhJ,KAAKC,QAAQsE,SACZvE,KAAKgJ,cAAgBhJ,KAAKiJ,iBAD/B,KAQXkC,oBAAqB,WACjB,YAAoB1I,IAAhBzC,KAAKgI,QAGFhI,KAAK4H,KAAK3H,QAAQ8N,YACpB/N,KAAK4H,KAAK3H,QAAQ8N,UAAUzE,SAAStJ,KAAKgI,OAAO9F,SAM1D0H,sBAAuB,WACd5J,KAAK2H,aAIN3H,KAAKkJ,UAAYlJ,KAAKgI,OAEtBhI,KAAKgO,YAAY,cACVhO,KAAK+I,eACZ/I,KAAKgO,YAAY,aACVhO,KAAKkJ,QACZlJ,KAAKgO,YAAY,UAEjBhO,KAAKgK,kBAObgE,YAAa,SAASC,GACL,cAATA,GACApM,EAAc7B,KAAK2H,WAAY,oBAC/BjG,EAAW1B,KAAK2H,WAAY,cAE5B9F,EAAc7B,KAAKqI,MAAOrI,KAAKC,QAAQ8C,MACvCrB,EAAW1B,KAAKqI,MAAOrI,KAAKC,QAAQ8F,cACpB,UAATkI,GACPpM,EAAc7B,KAAK2H,WAAY,wBAC/BjG,EAAW1B,KAAK2H,WAAY,UAE5B9F,EAAc7B,KAAKqI,MAAOrI,KAAKC,QAAQ8F,aACvCrE,EAAW1B,KAAKqI,MAAOrI,KAAKC,QAAQ8C,OACpB,aAATkL,IACPpM,EAAc7B,KAAK2H,WAAY,cAC/BjG,EAAW1B,KAAK2H,WAAY,oBAE5B9F,EAAc7B,KAAKqI,MAAOrI,KAAKC,QAAQ8F,aACvCrE,EAAW1B,KAAKqI,MAAOrI,KAAKC,QAAQ8C,QAO5CiH,cAAe,WACXlJ,EAAEU,QAAQ0M,YAAYlO,KAAK2H,WAAY,cACvC7G,EAAEU,QAAQ0M,YAAYlO,KAAK2H,WAAY,UACvC7G,EAAEU,QAAQ0M,YAAYlO,KAAK2H,WAAY,aAEvC9F,EAAc7B,KAAKqI,MAAOrI,KAAKC,QAAQ8F,aACvCrE,EAAW1B,KAAKqI,MAAOrI,KAAKC,QAAQ8C,OAMxC4F,gBAAiB,WAEb3I,KAAKkJ,SAAU,EAIflJ,KAAK6I,cAAe,EAGpB7I,KAAKgJ,aAAc,EAGnBhJ,KAAKiJ,aAAc,KAQ3B,OAJAnI,EAAE6F,QAAQwD,OAAS,SAAUlK,GACzB,OAAO,IAAIa,EAAEC,QAAQC,OAAOf,IAGzBF,IACRc,8BC35BH,IAAIsN,EAAU,EAAQ,MAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAAC3N,EAAOG,GAAIwN,EAAS,MAYnD,EAAQ,KAAR,CAAgDA,EAL/C,CAAC,KAAM,EAErBlO,eAPImO,EAQJnO,gBAAqBwC,IAIlB0L,EAAQE,SAAQ7N,EAAOC,QAAU0N,EAAQE","sources":["webpack:///./src/lib/fragments/LocateControl.react.js","webpack:///./node_modules/leaflet.locatecontrol/dist/L.Control.Locate.min.css","webpack:///./node_modules/leaflet.locatecontrol/src/L.Control.Locate.js","webpack:///./node_modules/leaflet.locatecontrol/dist/L.Control.Locate.min.css?bef7"],"sourcesContent":["import React, {Component} from 'react';\nimport Locate from \"leaflet.locatecontrol\";\nimport {propTypes} from '../components/LocateControl.react';\nimport {withLeaflet} from \"react-leaflet\";\n\nrequire('leaflet.locatecontrol/dist/L.Control.Locate.min.css');\n\n/**\n * LocateControl is a wrapper of LocateControl in react-leaflet. The component requires linking font-awesome, i.e.\n * app = dash.Dash(external_stylesheets=['https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'])\n */\nclass LocateControl extends Component {\n\n  componentDidMount() {\n    // Add component to map.\n    const { options, startDirectly } = this.props;\n    const { map } = this.props.leaflet;\n    const lc = new Locate(options);\n    lc.addTo(map);\n    // Start if needed.\n    if (startDirectly) {\n      lc.start();\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default withLeaflet(LocateControl);\nLocateControl.propTypes = propTypes;\n","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".leaflet-control-locate a{font-size:1.4em;color:#444;cursor:pointer}.leaflet-control-locate.active a{color:#2074b6}.leaflet-control-locate.active.following a{color:#fc8428}.leaflet-control-locate-location circle{animation:leaflet-control-locate-throb 4s ease infinite}@keyframes leaflet-control-locate-throb{0%{stroke-width:1}50%{stroke-width:3;transform:scale(0.8, 0.8)}100%{stroke-width:1}}\\n\", \"\"]);\n\n// exports\n","/*!\nCopyright (c) 2016 Dominik Moritz\n\nThis file is part of the leaflet locate control. It is licensed under the MIT license.\nYou can find the project at: https://github.com/domoritz/leaflet-locatecontrol\n*/\n(function (factory, window) {\n     // see https://github.com/Leaflet/Leaflet/blob/master/PLUGIN-GUIDE.md#module-loaders\n     // for details on how to structure a leaflet plugin.\n\n    // define an AMD module that relies on 'leaflet'\n    if (typeof define === 'function' && define.amd) {\n        define(['leaflet'], factory);\n\n    // define a Common JS module that relies on 'leaflet'\n    } else if (typeof exports === 'object') {\n        if (typeof window !== 'undefined' && window.L) {\n            module.exports = factory(L);\n        } else {\n            module.exports = factory(require('leaflet'));\n        }\n    }\n\n    // attach your plugin to the global 'L' variable\n    if (typeof window !== 'undefined' && window.L){\n        window.L.Control.Locate = factory(L);\n    }\n} (function (L) {\n    var LDomUtilApplyClassesMethod = function(method, element, classNames) {\n        classNames = classNames.split(' ');\n        classNames.forEach(function(className) {\n            L.DomUtil[method].call(this, element, className);\n        });\n    };\n\n    var addClasses = function(el, names) { LDomUtilApplyClassesMethod('addClass', el, names); };\n    var removeClasses = function(el, names) { LDomUtilApplyClassesMethod('removeClass', el, names); };\n\n    /**\n     * Compatible with L.Circle but a true marker instead of a path\n     */\n    var LocationMarker = L.Marker.extend({\n        initialize: function (latlng, options) {\n            L.Util.setOptions(this, options);\n            this._latlng = latlng;\n            this.createIcon();\n        },\n\n        /**\n         * Create a styled circle location marker\n         */\n        createIcon: function() {\n            var opt = this.options;\n\n            var style = '';\n\n            if (opt.color !== undefined) {\n                style += 'stroke:'+opt.color+';';\n            }\n            if (opt.weight !== undefined) {\n                style += 'stroke-width:'+opt.weight+';';\n            }\n            if (opt.fillColor !== undefined) {\n                style += 'fill:'+opt.fillColor+';';\n            }\n            if (opt.fillOpacity !== undefined) {\n                style += 'fill-opacity:'+opt.fillOpacity+';';\n            }\n            if (opt.opacity !== undefined) {\n                style += 'opacity:'+opt.opacity+';';\n            }\n\n            var icon = this._getIconSVG(opt, style);\n\n            this._locationIcon = L.divIcon({\n                className: icon.className,\n                html: icon.svg,\n                iconSize: [icon.w,icon.h],\n            });\n\n            this.setIcon(this._locationIcon);\n        },\n\n        /**\n         * Return the raw svg for the shape\n         *\n         * Split so can be easily overridden\n         */\n        _getIconSVG: function(options, style) {\n            var r = options.radius;\n            var w = options.weight;\n            var s = r + w;\n            var s2 = s * 2;\n            var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"'+s2+'\" height=\"'+s2+'\" version=\"1.1\" viewBox=\"-'+s+' -'+s+' '+s2+' '+s2+'\">' +\n            '<circle r=\"'+r+'\" style=\"'+style+'\" />' +\n            '</svg>';\n            return {\n                className: 'leaflet-control-locate-location',\n                svg: svg,\n                w: s2,\n                h: s2\n            };\n        },\n\n        setStyle: function(style) {\n            L.Util.setOptions(this, style);\n            this.createIcon();\n        }\n    });\n\n    var CompassMarker = LocationMarker.extend({\n        initialize: function (latlng, heading, options) {\n            L.Util.setOptions(this, options);\n            this._latlng = latlng;\n            this._heading = heading;\n            this.createIcon();\n        },\n\n        setHeading: function(heading) {\n            this._heading = heading;\n        },\n\n        /**\n         * Create a styled arrow compass marker\n         */\n        _getIconSVG: function(options, style) {\n            var r = options.radius;\n            var w = (options.width + options.weight);\n            var h = (r+options.depth + options.weight)*2;\n            var path = 'M0,0 l'+(options.width/2)+','+options.depth+' l-'+(w)+',0 z';\n            var svgstyle = 'transform: rotate('+this._heading+'deg)';\n            var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"'+(w)+'\" height=\"'+h+'\" version=\"1.1\" viewBox=\"-'+(w/2)+' 0 '+w+' '+h+'\" style=\"'+svgstyle+'\">'+\n            '<path d=\"'+path+'\" style=\"'+style+'\" />'+\n            '</svg>';\n            return {\n                className: 'leaflet-control-locate-heading',\n                svg: svg,\n                w: w,\n                h: h\n            };\n        },\n    });\n\n\n    var LocateControl = L.Control.extend({\n        options: {\n            /** Position of the control */\n            position: 'topleft',\n            /** The layer that the user's location should be drawn on. By default creates a new layer. */\n            layer: undefined,\n            /**\n             * Automatically sets the map view (zoom and pan) to the user's location as it updates.\n             * While the map is following the user's location, the control is in the `following` state,\n             * which changes the style of the control and the circle marker.\n             *\n             * Possible values:\n             *  - false: never updates the map view when location changes.\n             *  - 'once': set the view when the location is first determined\n             *  - 'always': always updates the map view when location changes.\n             *              The map view follows the user's location.\n             *  - 'untilPan': like 'always', except stops updating the\n             *                view if the user has manually panned the map.\n             *                The map view follows the user's location until she pans.\n             *  - 'untilPanOrZoom': (default) like 'always', except stops updating the\n             *                view if the user has manually panned the map.\n             *                The map view follows the user's location until she pans.\n             */\n            setView: 'untilPanOrZoom',\n            /** Keep the current map zoom level when setting the view and only pan. */\n            keepCurrentZoomLevel: false,\n\t    /** After activating the plugin by clicking on the icon, zoom to the selected zoom level, even when keepCurrentZoomLevel is true. Set to 'false' to disable this feature. */\n\t    initialZoomLevel: false,\n            /**\n             * This callback can be used to override the viewport tracking\n             * This function should return a LatLngBounds object.\n             *\n             * For example to extend the viewport to ensure that a particular LatLng is visible:\n             *\n             * getLocationBounds: function(locationEvent) {\n             *    return locationEvent.bounds.extend([-33.873085, 151.219273]);\n             * },\n             */\n            getLocationBounds: function (locationEvent) {\n                return locationEvent.bounds;\n            },\n            /** Smooth pan and zoom to the location of the marker. Only works in Leaflet 1.0+. */\n            flyTo: false,\n            /**\n             * The user location can be inside and outside the current view when the user clicks on the\n             * control that is already active. Both cases can be configures separately.\n             * Possible values are:\n             *  - 'setView': zoom and pan to the current location\n             *  - 'stop': stop locating and remove the location marker\n             */\n            clickBehavior: {\n                /** What should happen if the user clicks on the control while the location is within the current view. */\n                inView: 'stop',\n                /** What should happen if the user clicks on the control while the location is outside the current view. */\n                outOfView: 'setView',\n                /**\n                 * What should happen if the user clicks on the control while the location is within the current view\n                 * and we could be following but are not. Defaults to a special value which inherits from 'inView';\n                 */\n                inViewNotFollowing: 'inView',\n            },\n            /**\n             * If set, save the map bounds just before centering to the user's\n             * location. When control is disabled, set the view back to the\n             * bounds that were saved.\n             */\n            returnToPrevBounds: false,\n            /**\n             * Keep a cache of the location after the user deactivates the control. If set to false, the user has to wait\n             * until the locate API returns a new location before they see where they are again.\n             */\n            cacheLocation: true,\n            /** If set, a circle that shows the location accuracy is drawn. */\n            drawCircle: true,\n            /** If set, the marker at the users' location is drawn. */\n            drawMarker: true,\n            /** If set and supported then show the compass heading */\n            showCompass: true,\n            /** The class to be used to create the marker. For example L.CircleMarker or L.Marker */\n            markerClass: LocationMarker,\n            /** The class us be used to create the compass bearing arrow */\n            compassClass: CompassMarker,\n            /** Accuracy circle style properties. NOTE these styles should match the css animations styles */\n            circleStyle: {\n                className:   'leaflet-control-locate-circle',\n                color:       '#136AEC',\n                fillColor:   '#136AEC',\n                fillOpacity: 0.15,\n                weight:      0\n            },\n            /** Inner marker style properties. Only works if your marker class supports `setStyle`. */\n            markerStyle: {\n                className:   'leaflet-control-locate-marker',\n                color:       '#fff',\n                fillColor:   '#2A93EE',\n                fillOpacity: 1,\n                weight:      3,\n                opacity:     1,\n                radius:      9\n            },\n            /** Compass */\n            compassStyle: {\n                fillColor:   '#2A93EE',\n                fillOpacity: 1,\n                weight:      0,\n                color:       '#fff',\n                opacity:     1,\n                radius:      9, // How far is the arrow is from the center of of the marker\n                width:       9, // Width of the arrow\n                depth:       6  // Length of the arrow\n            },\n            /**\n             * Changes to accuracy circle and inner marker while following.\n             * It is only necessary to provide the properties that should change.\n             */\n            followCircleStyle: {},\n            followMarkerStyle: {\n                // color: '#FFA500',\n                // fillColor: '#FFB000'\n            },\n            followCompassStyle: {},\n            /** The CSS class for the icon. For example fa-location-arrow or fa-map-marker */\n            icon: 'fa fa-map-marker',\n            iconLoading: 'fa fa-spinner fa-spin',\n            /** The element to be created for icons. For example span or i */\n            iconElementTag: 'span',\n            /** Padding around the accuracy circle. */\n            circlePadding: [0, 0],\n            /** Use metric units. */\n            metric: true,\n            /**\n             * This callback can be used in case you would like to override button creation behavior.\n             * This is useful for DOM manipulation frameworks such as angular etc.\n             * This function should return an object with HtmlElement for the button (link property) and the icon (icon property).\n             */\n            createButtonCallback: function (container, options) {\n                var link = L.DomUtil.create('a', 'leaflet-bar-part leaflet-bar-part-single', container);\n                link.title = options.strings.title;\n                var icon = L.DomUtil.create(options.iconElementTag, options.icon, link);\n                return { link: link, icon: icon };\n            },\n            /** This event is called in case of any location error that is not a time out error. */\n            onLocationError: function(err, control) {\n                alert(err.message);\n            },\n            /**\n             * This event is called when the user's location is outside the bounds set on the map.\n             * The event is called repeatedly when the location changes.\n             */\n            onLocationOutsideMapBounds: function(control) {\n                control.stop();\n                alert(control.options.strings.outsideMapBoundsMsg);\n            },\n            /** Display a pop-up when the user click on the inner marker. */\n            showPopup: true,\n            strings: {\n                title: \"Show me where I am\",\n                metersUnit: \"meters\",\n                feetUnit: \"feet\",\n                popup: \"You are within {distance} {unit} from this point\",\n                outsideMapBoundsMsg: \"You seem located outside the boundaries of the map\"\n            },\n            /** The default options passed to leaflets locate method. */\n            locateOptions: {\n                maxZoom: Infinity,\n                watch: true,  // if you overwrite this, visualization cannot be updated\n                setView: false // have to set this to false because we have to\n                               // do setView manually\n            }\n        },\n\n        initialize: function (options) {\n            // set default options if nothing is set (merge one step deep)\n            for (var i in options) {\n                if (typeof this.options[i] === 'object') {\n                    L.extend(this.options[i], options[i]);\n                } else {\n                    this.options[i] = options[i];\n                }\n            }\n\n            // extend the follow marker style and circle from the normal style\n            this.options.followMarkerStyle = L.extend({}, this.options.markerStyle, this.options.followMarkerStyle);\n            this.options.followCircleStyle = L.extend({}, this.options.circleStyle, this.options.followCircleStyle);\n            this.options.followCompassStyle = L.extend({}, this.options.compassStyle, this.options.followCompassStyle);\n        },\n\n        /**\n         * Add control to map. Returns the container for the control.\n         */\n        onAdd: function (map) {\n            var container = L.DomUtil.create('div',\n                'leaflet-control-locate leaflet-bar leaflet-control');\n            this._container = container;\n            this._map = map;\n            this._layer = this.options.layer || new L.LayerGroup();\n            this._layer.addTo(map);\n            this._event = undefined;\n            this._compassHeading = null;\n            this._prevBounds = null;\n\n            var linkAndIcon = this.options.createButtonCallback(container, this.options);\n            this._link = linkAndIcon.link;\n            this._icon = linkAndIcon.icon;\n\n            L.DomEvent\n                .on(this._link, 'click', L.DomEvent.stopPropagation)\n                .on(this._link, 'click', L.DomEvent.preventDefault)\n                .on(this._link, 'click', this._onClick, this)\n                .on(this._link, 'dblclick', L.DomEvent.stopPropagation);\n\n            this._resetVariables();\n\n            this._map.on('unload', this._unload, this);\n\n            return container;\n        },\n\n        /**\n         * This method is called when the user clicks on the control.\n         */\n        _onClick: function() {\n            this._justClicked = true;\n            var wasFollowing =  this._isFollowing();\n            this._userPanned = false;\n            this._userZoomed = false;\n\n            if (this._active && !this._event) {\n                // click while requesting\n                this.stop();\n            } else if (this._active && this._event !== undefined) {\n                var behaviors = this.options.clickBehavior;\n                var behavior = behaviors.outOfView;\n                if (this._map.getBounds().contains(this._event.latlng)) {\n                    behavior = wasFollowing ? behaviors.inView : behaviors.inViewNotFollowing;\n                }\n\n                // Allow inheriting from another behavior\n                if (behaviors[behavior]) {\n                    behavior = behaviors[behavior];\n                }\n\n                switch (behavior) {\n                    case 'setView':\n                        this.setView();\n                        break;\n                    case 'stop':\n                        this.stop();\n                        if (this.options.returnToPrevBounds) {\n                            var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n                            f.bind(this._map)(this._prevBounds);\n                        }\n                        break;\n                }\n            } else {\n                if (this.options.returnToPrevBounds) {\n                  this._prevBounds = this._map.getBounds();\n                }\n                this.start();\n            }\n\n            this._updateContainerStyle();\n        },\n\n        /**\n         * Starts the plugin:\n         * - activates the engine\n         * - draws the marker (if coordinates available)\n         */\n        start: function() {\n            this._activate();\n\n            if (this._event) {\n                this._drawMarker(this._map);\n\n                // if we already have a location but the user clicked on the control\n                if (this.options.setView) {\n                    this.setView();\n                }\n            }\n            this._updateContainerStyle();\n        },\n\n        /**\n         * Stops the plugin:\n         * - deactivates the engine\n         * - reinitializes the button\n         * - removes the marker\n         */\n        stop: function() {\n            this._deactivate();\n\n            this._cleanClasses();\n            this._resetVariables();\n\n            this._removeMarker();\n        },\n\n        /**\n         * Keep the control active but stop following the location\n         */\n        stopFollowing: function() {\n            this._userPanned = true;\n            this._updateContainerStyle();\n            this._drawMarker();\n        },\n\n        /**\n         * This method launches the location engine.\n         * It is called before the marker is updated,\n         * event if it does not mean that the event will be ready.\n         *\n         * Override it if you want to add more functionalities.\n         * It should set the this._active to true and do nothing if\n         * this._active is true.\n         */\n        _activate: function() {\n            if (!this._active) {\n                this._map.locate(this.options.locateOptions);\n                this._active = true;\n\n                // bind event listeners\n                this._map.on('locationfound', this._onLocationFound, this);\n                this._map.on('locationerror', this._onLocationError, this);\n                this._map.on('dragstart', this._onDrag, this);\n                this._map.on('zoomstart', this._onZoom, this);\n                this._map.on('zoomend', this._onZoomEnd, this);\n                if (this.options.showCompass) {\n                    var oriAbs = 'ondeviceorientationabsolute' in window;\n                    if (oriAbs || ('ondeviceorientation' in window)) {\n                        var _this = this;\n                        var deviceorientation = function () {\n                            L.DomEvent.on(window, oriAbs ? 'deviceorientationabsolute' : 'deviceorientation', _this._onDeviceOrientation, _this);\n                        };\n                        if (DeviceOrientationEvent && typeof DeviceOrientationEvent.requestPermission === 'function') {\n                            DeviceOrientationEvent.requestPermission().then(function (permissionState) {\n                                if (permissionState === 'granted') {\n                                    deviceorientation();\n                                }\n                            })\n                        } else {\n                            deviceorientation();\n                        }\n                    }\n                }\n            }\n        },\n\n        /**\n         * Called to stop the location engine.\n         *\n         * Override it to shutdown any functionalities you added on start.\n         */\n        _deactivate: function() {\n            this._map.stopLocate();\n            this._active = false;\n\n            if (!this.options.cacheLocation) {\n                this._event = undefined;\n            }\n\n            // unbind event listeners\n            this._map.off('locationfound', this._onLocationFound, this);\n            this._map.off('locationerror', this._onLocationError, this);\n            this._map.off('dragstart', this._onDrag, this);\n            this._map.off('zoomstart', this._onZoom, this);\n            this._map.off('zoomend', this._onZoomEnd, this);\n            if (this.options.showCompass) {\n                this._compassHeading = null;\n                if ('ondeviceorientationabsolute' in window) {\n                    L.DomEvent.off(window, 'deviceorientationabsolute', this._onDeviceOrientation, this);\n                } else if ('ondeviceorientation' in window) {\n                    L.DomEvent.off(window, 'deviceorientation', this._onDeviceOrientation, this);\n                }\n            }\n        },\n\n        /**\n         * Zoom (unless we should keep the zoom level) and an to the current view.\n         */\n        setView: function() {\n            this._drawMarker();\n            if (this._isOutsideMapBounds()) {\n                this._event = undefined;  // clear the current location so we can get back into the bounds\n                this.options.onLocationOutsideMapBounds(this);\n            } else {\n\t\tif (this._justClicked && this.options.initialZoomLevel !== false) {\n                    var f = this.options.flyTo ? this._map.flyTo : this._map.setView;\n                    f.bind(this._map)([this._event.latitude, this._event.longitude], this.options.initialZoomLevel);\n\t\t} else\n                if (this.options.keepCurrentZoomLevel) {\n                    var f = this.options.flyTo ? this._map.flyTo : this._map.panTo;\n                    f.bind(this._map)([this._event.latitude, this._event.longitude]);\n                } else {\n                    var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n                    // Ignore zoom events while setting the viewport as these would stop following\n                    this._ignoreEvent = true;\n                    f.bind(this._map)(this.options.getLocationBounds(this._event), {\n                        padding: this.options.circlePadding,\n                        maxZoom: this.options.locateOptions.maxZoom\n                    });\n                    L.Util.requestAnimFrame(function(){\n                        // Wait until after the next animFrame because the flyTo can be async\n                        this._ignoreEvent = false;\n                    }, this);\n\n                }\n            }\n        },\n\n        /**\n         *\n         */\n        _drawCompass: function() {\n            if (!this._event) {\n                return;\n            }\n\n            var latlng = this._event.latlng;\n\n            if (this.options.showCompass && latlng && this._compassHeading !== null) {\n                var cStyle = this._isFollowing() ? this.options.followCompassStyle : this.options.compassStyle;\n                if (!this._compass) {\n                    this._compass = new this.options.compassClass(latlng, this._compassHeading, cStyle).addTo(this._layer);\n                } else {\n                    this._compass.setLatLng(latlng);\n                    this._compass.setHeading(this._compassHeading);\n                    // If the compassClass can be updated with setStyle, update it.\n                    if (this._compass.setStyle) {\n                        this._compass.setStyle(cStyle);\n                    }\n                }\n                // \n            }\n            if (this._compass && (!this.options.showCompass || this._compassHeading === null)) {\n                this._compass.removeFrom(this._layer);\n                this._compass = null;\n            }\n        },\n\n        /**\n         * Draw the marker and accuracy circle on the map.\n         *\n         * Uses the event retrieved from onLocationFound from the map.\n         */\n        _drawMarker: function() {\n            if (this._event.accuracy === undefined) {\n                this._event.accuracy = 0;\n            }\n\n            var radius = this._event.accuracy;\n            var latlng = this._event.latlng;\n\n            // circle with the radius of the location's accuracy\n            if (this.options.drawCircle) {\n                var style = this._isFollowing() ? this.options.followCircleStyle : this.options.circleStyle;\n\n                if (!this._circle) {\n                    this._circle = L.circle(latlng, radius, style).addTo(this._layer);\n                } else {\n                    this._circle.setLatLng(latlng).setRadius(radius).setStyle(style);\n                }\n            }\n\n            var distance, unit;\n            if (this.options.metric) {\n                distance = radius.toFixed(0);\n                unit =  this.options.strings.metersUnit;\n            } else {\n                distance = (radius * 3.2808399).toFixed(0);\n                unit = this.options.strings.feetUnit;\n            }\n\n            // small inner marker\n            if (this.options.drawMarker) {\n                var mStyle = this._isFollowing() ? this.options.followMarkerStyle : this.options.markerStyle;\n                if (!this._marker) {\n                    this._marker = new this.options.markerClass(latlng, mStyle).addTo(this._layer);\n                } else {\n                    this._marker.setLatLng(latlng);\n                    // If the markerClass can be updated with setStyle, update it.\n                    if (this._marker.setStyle) {\n                        this._marker.setStyle(mStyle);\n                    }\n                }\n            }\n\n            this._drawCompass();\n\n            var t = this.options.strings.popup;\n            function getPopupText() {\n                if (typeof t === 'string') {\n                    return L.Util.template(t, {distance: distance, unit: unit});\n                } else if (typeof t === 'function') {\n                    return t({distance: distance, unit: unit});\n                } else {\n                    return t;\n                }\n            }\n            if (this.options.showPopup && t && this._marker) {\n                this._marker\n                    .bindPopup(getPopupText())\n                    ._popup.setLatLng(latlng);\n            }\n            if (this.options.showPopup && t && this._compass) {\n                this._compass\n                    .bindPopup(getPopupText())\n                    ._popup.setLatLng(latlng);\n            }\n        },\n\n        /**\n         * Remove the marker from map.\n         */\n        _removeMarker: function() {\n            this._layer.clearLayers();\n            this._marker = undefined;\n            this._circle = undefined;\n        },\n\n        /**\n         * Unload the plugin and all event listeners.\n         * Kind of the opposite of onAdd.\n         */\n        _unload: function() {\n            this.stop();\n            this._map.off('unload', this._unload, this);\n        },\n\n        /**\n         * Sets the compass heading\n         */\n        _setCompassHeading: function(angle) {\n            if (!isNaN(parseFloat(angle)) && isFinite(angle)) {\n                angle = Math.round(angle);\n\n                this._compassHeading = angle;\n                L.Util.requestAnimFrame(this._drawCompass, this);\n            } else {\n                this._compassHeading = null;\n            }\n        },\n\n        /**\n         * If the compass fails calibration just fail safely and remove the compass\n         */\n        _onCompassNeedsCalibration: function() {\n            this._setCompassHeading();\n        },\n\n        /**\n         * Process and normalise compass events\n         */\n        _onDeviceOrientation: function(e) {\n            if (!this._active) {\n                return;\n            }\n\n            if (e.webkitCompassHeading) {\n                // iOS\n                this._setCompassHeading(e.webkitCompassHeading);\n            } else if (e.absolute && e.alpha) {\n                // Android\n                this._setCompassHeading(360 - e.alpha)\n            }\n        },\n\n        /**\n         * Calls deactivate and dispatches an error.\n         */\n        _onLocationError: function(err) {\n            // ignore time out error if the location is watched\n            if (err.code == 3 && this.options.locateOptions.watch) {\n                return;\n            }\n\n            this.stop();\n            this.options.onLocationError(err, this);\n        },\n\n        /**\n         * Stores the received event and updates the marker.\n         */\n        _onLocationFound: function(e) {\n            // no need to do anything if the location has not changed\n            if (this._event &&\n                (this._event.latlng.lat === e.latlng.lat &&\n                 this._event.latlng.lng === e.latlng.lng &&\n                     this._event.accuracy === e.accuracy)) {\n                return;\n            }\n\n            if (!this._active) {\n                // we may have a stray event\n                return;\n            }\n\n            this._event = e;\n\n            this._drawMarker();\n            this._updateContainerStyle();\n\n            switch (this.options.setView) {\n                case 'once':\n                    if (this._justClicked) {\n                        this.setView();\n                    }\n                    break;\n                case 'untilPan':\n                    if (!this._userPanned) {\n                        this.setView();\n                    }\n                    break;\n                case 'untilPanOrZoom':\n                    if (!this._userPanned && !this._userZoomed) {\n                        this.setView();\n                    }\n                    break;\n                case 'always':\n                    this.setView();\n                    break;\n                case false:\n                    // don't set the view\n                    break;\n            }\n\n            this._justClicked = false;\n        },\n\n        /**\n         * When the user drags. Need a separate event so we can bind and unbind event listeners.\n         */\n        _onDrag: function() {\n            // only react to drags once we have a location\n            if (this._event && !this._ignoreEvent) {\n                this._userPanned = true;\n                this._updateContainerStyle();\n                this._drawMarker();\n            }\n        },\n\n        /**\n         * When the user zooms. Need a separate event so we can bind and unbind event listeners.\n         */\n        _onZoom: function() {\n            // only react to drags once we have a location\n            if (this._event && !this._ignoreEvent) {\n                this._userZoomed = true;\n                this._updateContainerStyle();\n                this._drawMarker();\n            }\n        },\n\n        /**\n         * After a zoom ends update the compass and handle sideways zooms\n         */\n        _onZoomEnd: function() {\n            if (this._event) {\n                this._drawCompass();\n            }\n\n            if (this._event && !this._ignoreEvent) {\n                // If we have zoomed in and out and ended up sideways treat it as a pan\n                if (this._marker && !this._map.getBounds().pad(-.3).contains(this._marker.getLatLng())) {\n                    this._userPanned = true;\n                    this._updateContainerStyle();\n                    this._drawMarker();\n                }\n            }\n        },\n\n        /**\n         * Compute whether the map is following the user location with pan and zoom.\n         */\n        _isFollowing: function() {\n            if (!this._active) {\n                return false;\n            }\n\n            if (this.options.setView === 'always') {\n                return true;\n            } else if (this.options.setView === 'untilPan') {\n                return !this._userPanned;\n            } else if (this.options.setView === 'untilPanOrZoom') {\n                return !this._userPanned && !this._userZoomed;\n            }\n        },\n\n        /**\n         * Check if location is in map bounds\n         */\n        _isOutsideMapBounds: function() {\n            if (this._event === undefined) {\n                return false;\n            }\n            return this._map.options.maxBounds &&\n                !this._map.options.maxBounds.contains(this._event.latlng);\n        },\n\n        /**\n         * Toggles button class between following and active.\n         */\n        _updateContainerStyle: function() {\n            if (!this._container) {\n                return;\n            }\n\n            if (this._active && !this._event) {\n                // active but don't have a location yet\n                this._setClasses('requesting');\n            } else if (this._isFollowing()) {\n                this._setClasses('following');\n            } else if (this._active) {\n                this._setClasses('active');\n            } else {\n                this._cleanClasses();\n            }\n        },\n\n        /**\n         * Sets the CSS classes for the state.\n         */\n        _setClasses: function(state) {\n            if (state == 'requesting') {\n                removeClasses(this._container, \"active following\");\n                addClasses(this._container, \"requesting\");\n\n                removeClasses(this._icon, this.options.icon);\n                addClasses(this._icon, this.options.iconLoading);\n            } else if (state == 'active') {\n                removeClasses(this._container, \"requesting following\");\n                addClasses(this._container, \"active\");\n\n                removeClasses(this._icon, this.options.iconLoading);\n                addClasses(this._icon, this.options.icon);\n            } else if (state == 'following') {\n                removeClasses(this._container, \"requesting\");\n                addClasses(this._container, \"active following\");\n\n                removeClasses(this._icon, this.options.iconLoading);\n                addClasses(this._icon, this.options.icon);\n            }\n        },\n\n        /**\n         * Removes all classes from button.\n         */\n        _cleanClasses: function() {\n            L.DomUtil.removeClass(this._container, \"requesting\");\n            L.DomUtil.removeClass(this._container, \"active\");\n            L.DomUtil.removeClass(this._container, \"following\");\n\n            removeClasses(this._icon, this.options.iconLoading);\n            addClasses(this._icon, this.options.icon);\n        },\n\n        /**\n         * Reinitializes state variables.\n         */\n        _resetVariables: function() {\n            // whether locate is active or not\n            this._active = false;\n\n            // true if the control was clicked for the first time\n            // we need this so we can pan and zoom once we have the location\n            this._justClicked = false;\n\n            // true if the user has panned the map after clicking the control\n            this._userPanned = false;\n\n            // true if the user has zoomed the map after clicking the control\n            this._userZoomed = false;\n        }\n    });\n\n    L.control.locate = function (options) {\n        return new L.Control.Locate(options);\n    };\n\n    return LocateControl;\n}, window));\n","\nvar content = require(\"!!../../css-loader/index.js!./L.Control.Locate.min.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../css-loader/index.js!./L.Control.Locate.min.css\", function() {\n\t\tvar newContent = require(\"!!../../css-loader/index.js!./L.Control.Locate.min.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"names":["require","LocateControl","this","options","startDirectly","map","props","lc","Component","withLeaflet","module","exports","push","id","factory","window","L","Control","Locate","LDomUtilApplyClassesMethod","method","element","classNames","split","forEach","className","DomUtil","call","addClasses","el","names","removeClasses","LocationMarker","Marker","extend","initialize","latlng","Util","setOptions","_latlng","createIcon","opt","style","undefined","color","weight","fillColor","fillOpacity","opacity","icon","_getIconSVG","_locationIcon","divIcon","html","svg","iconSize","w","h","setIcon","r","radius","s","s2","setStyle","CompassMarker","heading","_heading","setHeading","width","depth","path","position","layer","setView","keepCurrentZoomLevel","initialZoomLevel","getLocationBounds","locationEvent","bounds","flyTo","clickBehavior","inView","outOfView","inViewNotFollowing","returnToPrevBounds","cacheLocation","drawCircle","drawMarker","showCompass","markerClass","compassClass","circleStyle","markerStyle","compassStyle","followCircleStyle","followMarkerStyle","followCompassStyle","iconLoading","iconElementTag","circlePadding","metric","createButtonCallback","container","link","create","title","strings","onLocationError","err","control","alert","message","onLocationOutsideMapBounds","stop","outsideMapBoundsMsg","showPopup","metersUnit","feetUnit","popup","locateOptions","maxZoom","Infinity","watch","i","onAdd","_container","_map","_layer","LayerGroup","addTo","_event","_compassHeading","_prevBounds","linkAndIcon","_link","_icon","DomEvent","on","stopPropagation","preventDefault","_onClick","_resetVariables","_unload","_justClicked","wasFollowing","_isFollowing","_userPanned","_userZoomed","_active","behaviors","behavior","getBounds","contains","flyToBounds","fitBounds","bind","f","start","_updateContainerStyle","_activate","_drawMarker","_deactivate","_cleanClasses","_removeMarker","stopFollowing","locate","_onLocationFound","_onLocationError","_onDrag","_onZoom","_onZoomEnd","oriAbs","_this","deviceorientation","_onDeviceOrientation","DeviceOrientationEvent","requestPermission","then","permissionState","stopLocate","off","_isOutsideMapBounds","latitude","longitude","panTo","_ignoreEvent","padding","requestAnimFrame","_drawCompass","cStyle","_compass","setLatLng","removeFrom","accuracy","distance","unit","_circle","setRadius","circle","toFixed","mStyle","_marker","t","getPopupText","template","bindPopup","_popup","clearLayers","_setCompassHeading","angle","isNaN","parseFloat","isFinite","Math","round","_onCompassNeedsCalibration","e","webkitCompassHeading","absolute","alpha","code","lat","lng","pad","getLatLng","maxBounds","_setClasses","state","removeClass","content","transform","locals"],"sourceRoot":""}