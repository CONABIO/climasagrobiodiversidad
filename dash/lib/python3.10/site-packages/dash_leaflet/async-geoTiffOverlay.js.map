{"version":3,"file":"async-geoTiffOverlay.js","mappings":"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","sources":["webpack:///./node_modules/@petamoriken/float16/src/_util/primordials.mjs","webpack:///./node_modules/@petamoriken/float16/src/_util/arrayIterator.mjs","webpack:///./node_modules/@petamoriken/float16/src/_util/converter.mjs","webpack:///./node_modules/@petamoriken/float16/src/DataView.mjs","webpack:///./node_modules/geotiff/src/compression/index.js","webpack:///./node_modules/geotiff/src/resample.js","webpack:///./node_modules/geotiff/src/geotiffimage.js","webpack:///./node_modules/geotiff/src/dataview64.js","webpack:///./node_modules/geotiff/src/dataslice.js","webpack:///./node_modules/geotiff/src/utils.js","webpack:///./node_modules/geotiff/src/source/arraybuffer.js","webpack:///./node_modules/geotiff/src/source/basesource.js","webpack:///./node_modules/geotiff/src/geotiff.js","webpack:///./node_modules/geotiff/src/rgb.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/nadgrid.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/projections/robin.js","webpack:///./node_modules/proj4/lib/projections/geocent.js","webpack:///./node_modules/proj4/lib/projections/tpers.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./src/lib/LeafletGeoTIFFOverlay.js","webpack:///./src/lib/fragments/GeoTIFFOverlay.react.js","webpack:///./node_modules/geotiff/src/globals.js","webpack:///./node_modules/xml-utils/find-tag-by-name.js","webpack:///./node_modules/xml-utils/find-tags-by-name.js","webpack:///./node_modules/xml-utils/get-attribute.js","webpack:///./node_modules/xml-utils/index-of-match.js"],"sourcesContent":["/* eslint-disable no-restricted-globals */\n/* global SharedArrayBuffer */\n\n/** @type {(target: Function) => (thisArg: any, ...args: any[]) => any} */\nfunction uncurryThis(target) {\n  return (thisArg, ...args) => {\n    return ReflectApply(target, thisArg, args);\n  };\n}\n\n/** @type {(target: any, key: string | symbol) => (thisArg: any, ...args: any[]) => any} */\nfunction uncurryThisGetter(target, key) {\n  return uncurryThis(\n    ReflectGetOwnPropertyDescriptor(\n      target,\n      key\n    ).get\n  );\n}\n\n// Reflect\nexport const {\n  apply: ReflectApply,\n  construct: ReflectConstruct,\n  defineProperty: ReflectDefineProperty,\n  get: ReflectGet,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  getPrototypeOf: ReflectGetPrototypeOf,\n  has: ReflectHas,\n  ownKeys: ReflectOwnKeys,\n  set: ReflectSet,\n  setPrototypeOf: ReflectSetPrototypeOf,\n} = Reflect;\n\n// Proxy\nexport const NativeProxy = Proxy;\n\n// Number\nexport const NativeNumber = Number;\nexport const {\n  isFinite: NumberIsFinite,\n  isNaN: NumberIsNaN,\n} = NativeNumber;\n\n// Symbol\nexport const {\n  iterator: SymbolIterator,\n  species: SymbolSpecies,\n  toStringTag: SymbolToStringTag,\n  for: SymbolFor,\n} = Symbol;\n\n// Object\nexport const NativeObject = Object;\nexport const {\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  freeze: ObjectFreeze,\n  is: ObjectIs,\n} = NativeObject;\n/** @type {(object: object, key: PropertyKey) => boolean} */\nexport const ObjectHasOwn = /** @type {any} */ (NativeObject).hasOwn ||\n  uncurryThis(NativeObject.prototype.hasOwnProperty);\n\n// Array\nconst NativeArray = Array;\nexport const ArrayIsArray = NativeArray.isArray;\nconst ArrayPrototype = NativeArray.prototype;\n/** @type {(array: ArrayLike<unknown>, separator?: string) => string} */\nexport const ArrayPrototypeJoin = uncurryThis(ArrayPrototype.join);\n/** @type {<T>(array: T[], ...items: T[]) => number} */\nexport const ArrayPrototypePush = uncurryThis(ArrayPrototype.push);\n/** @type {(array: ArrayLike<unknown>) => string} */\nexport const ArrayPrototypeToLocaleString = uncurryThis(\n  ArrayPrototype.toLocaleString\n);\nexport const NativeArrayPrototypeSymbolIterator = ArrayPrototype[SymbolIterator];\n/** @type {<T>(array: T[]) => IterableIterator<T>} */\nexport const ArrayPrototypeSymbolIterator = uncurryThis(NativeArrayPrototypeSymbolIterator);\n\n// Math\nexport const MathTrunc = Math.trunc;\n\n// ArrayBuffer\nexport const NativeArrayBuffer = ArrayBuffer;\nexport const ArrayBufferIsView = NativeArrayBuffer.isView;\n/** @type {(buffer: ArrayBuffer, begin?: number, end?: number) => number} */\nexport const ArrayBufferPrototypeSlice = uncurryThis(NativeArrayBuffer.prototype.slice);\n/** @type {(buffer: ArrayBuffer) => ArrayBuffer} */\nexport const ArrayBufferPrototypeGetByteLength = uncurryThisGetter(NativeArrayBuffer.prototype, \"byteLength\");\n\n// SharedArrayBuffer\nexport const NativeSharedArrayBuffer = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : null;\n/** @type {(buffer: SharedArrayBuffer) => SharedArrayBuffer} */\nexport const SharedArrayBufferPrototypeGetByteLength = NativeSharedArrayBuffer\n  && uncurryThisGetter(NativeSharedArrayBuffer.prototype, \"byteLength\");\n\n// TypedArray\n/** @typedef {Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array} TypedArray */\n/** @type {any} */\nexport const TypedArray = ReflectGetPrototypeOf(Uint8Array);\nconst TypedArrayFrom = TypedArray.from;\nexport const TypedArrayPrototype = TypedArray.prototype;\nexport const NativeTypedArrayPrototypeSymbolIterator = TypedArrayPrototype[SymbolIterator];\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeKeys = uncurryThis(TypedArrayPrototype.keys);\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeValues = uncurryThis(\n  TypedArrayPrototype.values\n);\n/** @type {(typedArray: TypedArray) => IterableIterator<[number, number]>} */\nexport const TypedArrayPrototypeEntries = uncurryThis(\n  TypedArrayPrototype.entries\n);\n/** @type {(typedArray: TypedArray, array: ArrayLike<number>, offset?: number) => void} */\nexport const TypedArrayPrototypeSet = uncurryThis(TypedArrayPrototype.set);\n/** @type {<T extends TypedArray>(typedArray: T) => T} */\nexport const TypedArrayPrototypeReverse = uncurryThis(\n  TypedArrayPrototype.reverse\n);\n/** @type {<T extends TypedArray>(typedArray: T, value: number, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeFill = uncurryThis(TypedArrayPrototype.fill);\n/** @type {<T extends TypedArray>(typedArray: T, target: number, start: number, end?: number) => T} */\nexport const TypedArrayPrototypeCopyWithin = uncurryThis(\n  TypedArrayPrototype.copyWithin\n);\n/** @type {<T extends TypedArray>(typedArray: T, compareFn?: (a: number, b: number) => number) => T} */\nexport const TypedArrayPrototypeSort = uncurryThis(TypedArrayPrototype.sort);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSlice = uncurryThis(TypedArrayPrototype.slice);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSubarray = uncurryThis(\n  TypedArrayPrototype.subarray\n);\n/** @type {((typedArray: TypedArray) => ArrayBuffer)} */\nexport const TypedArrayPrototypeGetBuffer = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"buffer\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetByteOffset = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"byteOffset\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetLength = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"length\"\n);\n/** @type {(target: unknown) => string} */\nexport const TypedArrayPrototypeGetSymbolToStringTag = uncurryThisGetter(\n  TypedArrayPrototype,\n  SymbolToStringTag\n);\n\n// Uint16Array\nexport const NativeUint16Array = Uint16Array;\n/** @type {Uint16ArrayConstructor[\"from\"]} */\nexport const Uint16ArrayFrom = (...args) => {\n  return ReflectApply(TypedArrayFrom, NativeUint16Array, args);\n};\n\n// Uint32Array\nexport const NativeUint32Array = Uint32Array;\n\n// Float32Array\nexport const NativeFloat32Array = Float32Array;\n\n// ArrayIterator\n/** @type {any} */\nconst ArrayIteratorPrototype = ReflectGetPrototypeOf([][SymbolIterator]());\n/** @type {<T>(arrayIterator: IterableIterator<T>) => IteratorResult<T>} */\nexport const ArrayIteratorPrototypeNext = uncurryThis(ArrayIteratorPrototype.next);\n\n// Generator\n/** @type {<T = unknown, TReturn = any, TNext = unknown>(generator: Generator<T, TReturn, TNext>, value?: TNext) => T} */\nexport const GeneratorPrototypeNext = uncurryThis((function* () {})().next);\n\n// Iterator\nexport const IteratorPrototype = ReflectGetPrototypeOf(ArrayIteratorPrototype);\n\n// DataView\nconst DataViewPrototype = DataView.prototype;\n/** @type {(dataView: DataView, byteOffset: number, littleEndian?: boolean) => number} */\nexport const DataViewPrototypeGetUint16 = uncurryThis(\n  DataViewPrototype.getUint16\n);\n/** @type {(dataView: DataView, byteOffset: number, value: number, littleEndian?: boolean) => void} */\nexport const DataViewPrototypeSetUint16 = uncurryThis(\n  DataViewPrototype.setUint16\n);\n\n// Error\nexport const NativeTypeError = TypeError;\nexport const NativeRangeError = RangeError;\n\n// Set\n/**\n * Do not construct with arguments to avoid calling the \"add\" method\n *\n * @type {{new <T = any>(): Set<T>}}\n */\nexport const NativeSet = Set;\nconst SetPrototype = NativeSet.prototype;\n/** @type {<T>(set: Set<T>, value: T) => Set<T>} */\nexport const SetPrototypeAdd = uncurryThis(SetPrototype.add);\n/** @type {<T>(set: Set<T>, value: T) => boolean} */\nexport const SetPrototypeHas = uncurryThis(SetPrototype.has);\n\n// WeakMap\n/**\n * Do not construct with arguments to avoid calling the \"set\" method\n *\n * @type {{new <K extends {}, V>(): WeakMap<K, V>}}\n */\nexport const NativeWeakMap = WeakMap;\nconst WeakMapPrototype = NativeWeakMap.prototype;\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => V} */\nexport const WeakMapPrototypeGet = uncurryThis(WeakMapPrototype.get);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => boolean} */\nexport const WeakMapPrototypeHas = uncurryThis(WeakMapPrototype.has);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K, value: V) => WeakMap} */\nexport const WeakMapPrototypeSet = uncurryThis(WeakMapPrototype.set);\n","import {\n  ArrayIteratorPrototypeNext,\n  ArrayPrototypeSymbolIterator,\n  GeneratorPrototypeNext,\n  IteratorPrototype,\n  NativeArrayPrototypeSymbolIterator,\n  NativeWeakMap,\n  ObjectCreate,\n  ObjectFreeze,\n  SymbolIterator,\n  SymbolToStringTag,\n  WeakMapPrototypeGet,\n  WeakMapPrototypeSet,\n} from \"./primordials.mjs\";\n\n/**\n * Wrap ArrayIterator If Array.prototype [@@iterator] has been modified\n *\n * @type {<T>(array: T[]) => Iterable<T>}\n */\nexport function toSafe(array) {\n  if (array[SymbolIterator] === NativeArrayPrototypeSymbolIterator) {\n    return array;\n  }\n\n  const arrayIterator = ArrayPrototypeSymbolIterator(array);\n  return ObjectFreeze(/** @type {any} */ ({\n    next() {\n      return ArrayIteratorPrototypeNext(arrayIterator);\n    },\n    return: undefined,\n    throw: undefined,\n\n    [SymbolIterator]() {\n      return this;\n    },\n  }));\n}\n\n/** @type {WeakMap<{}, Generator<any>>} */\nconst generators = new NativeWeakMap();\n\n/** @see https://tc39.es/ecma262/#sec-%arrayiteratorprototype%-object */\nconst DummyArrayIteratorPrototype = ObjectCreate(IteratorPrototype, {\n  next: {\n    value: function next() {\n      const generator = WeakMapPrototypeGet(generators, this);\n      return GeneratorPrototypeNext(generator);\n    },\n    writable: true,\n    configurable: true,\n  },\n\n  [SymbolToStringTag]: {\n    value: \"Array Iterator\",\n    configurable: true,\n  },\n});\n\n/** @type {<T>(generator: Generator<T>) => IterableIterator<T>} */\nexport function wrapGenerator(generator) {\n  const dummy = ObjectCreate(DummyArrayIteratorPrototype);\n  WeakMapPrototypeSet(generators, dummy, generator);\n  return dummy;\n}\n","// algorithm: http://fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nimport {\n  NativeArrayBuffer,\n  NativeFloat32Array,\n  NativeUint32Array,\n} from \"./primordials.mjs\";\n\nconst buffer = new NativeArrayBuffer(4);\nconst floatView = new NativeFloat32Array(buffer);\nconst uint32View = new NativeUint32Array(buffer);\n\nconst baseTable = new NativeUint32Array(512);\nconst shiftTable = new NativeUint32Array(512);\n\nfor (let i = 0; i < 256; ++i) {\n  const e = i - 127;\n\n  // very small number (0, -0)\n  if (e < -27) {\n    baseTable[i]         = 0x0000;\n    baseTable[i | 0x100] = 0x8000;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n\n  // small number (denorm)\n  } else if (e < -14) {\n    baseTable[i]         =  0x0400 >> (-e - 14);\n    baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n    shiftTable[i]         = -e - 1;\n    shiftTable[i | 0x100] = -e - 1;\n\n  // normal number\n  } else if (e <= 15) {\n    baseTable[i]         =  (e + 15) << 10;\n    baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n\n  // large number (Infinity, -Infinity)\n  } else if (e < 128) {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n\n  // stay (NaN, Infinity, -Infinity)\n  } else {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n  }\n}\n\n/**\n * round a number to a half float number bits.\n *\n * @param {unknown} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16Bits(num) {\n  floatView[0] = /** @type {any} */ (num);\n  const f = uint32View[0];\n  const e = (f >> 23) & 0x1ff;\n  return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\n\nconst mantissaTable = new NativeUint32Array(2048);\nconst exponentTable = new NativeUint32Array(64);\nconst offsetTable = new NativeUint32Array(64);\n\nmantissaTable[0] = 0;\nfor (let i = 1; i < 1024; ++i) {\n  let m = i << 13;    // zero pad mantissa bits\n  let e = 0;          // zero exponent\n\n  // normalized\n  while((m & 0x00800000) === 0) {\n    e -= 0x00800000;  // decrement exponent\n    m <<= 1;\n  }\n\n  m &= ~0x00800000;   // clear leading 1 bit\n  e += 0x38800000;    // adjust bias\n\n  mantissaTable[i] = m | e;\n}\nfor (let i = 1024; i < 2048; ++i) {\n  mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\n\nexponentTable[0] = 0;\nfor (let i = 1; i < 31; ++i) {\n  exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor (let i = 33; i < 63; ++i) {\n  exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\n\noffsetTable[0] = 0;\nfor (let i = 1; i < 64; ++i) {\n  if (i === 32) {\n    offsetTable[i] = 0;\n  } else {\n    offsetTable[i] = 1024;\n  }\n}\n\n/**\n * convert a half float number bits to a number.\n *\n * @param {number} float16bits - half float number bits\n * @returns {number} double float\n */\nexport function convertToNumber(float16bits) {\n  const m = float16bits >> 10;\n  uint32View[0] = mantissaTable[offsetTable[m] + (float16bits & 0x3ff)] + exponentTable[m];\n  return floatView[0];\n}\n","import { toSafe } from \"./_util/arrayIterator.mjs\";\nimport { convertToNumber, roundToFloat16Bits } from \"./_util/converter.mjs\";\nimport {\n  DataViewPrototypeGetUint16,\n  DataViewPrototypeSetUint16,\n} from \"./_util/primordials.mjs\";\n\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView.\n *\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\nexport function getFloat16(dataView, byteOffset, ...opts) {\n  return convertToNumber(\n    DataViewPrototypeGetUint16(dataView, byteOffset, ...toSafe(opts))\n  );\n}\n\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView.\n *\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\nexport function setFloat16(dataView, byteOffset, value, ...opts) {\n  return DataViewPrototypeSetUint16(\n    dataView,\n    byteOffset,\n    roundToFloat16Bits(value),\n    ...toSafe(opts)\n  );\n}\n","const registry = new Map();\n\nexport function addDecoder(cases, importFn) {\n  if (!Array.isArray(cases)) {\n    cases = [cases]; // eslint-disable-line no-param-reassign\n  }\n  cases.forEach((c) => registry.set(c, importFn));\n}\n\nexport async function getDecoder(fileDirectory) {\n  const importFn = registry.get(fileDirectory.Compression);\n  if (!importFn) {\n    throw new Error(`Unknown compression method identifier: ${fileDirectory.Compression}`);\n  }\n  const Decoder = await importFn();\n  return new Decoder(fileDirectory);\n}\n\n// Add default decoders to registry (end-user may override with other implementations)\naddDecoder([undefined, 1], () => import('./raw').then((m) => m.default));\naddDecoder(5, () => import('./lzw').then((m) => m.default));\naddDecoder(6, () => {\n  throw new Error('old style JPEG compression is not supported.');\n});\naddDecoder(7, () => import('./jpeg').then((m) => m.default));\naddDecoder([8, 32946], () => import('./deflate').then((m) => m.default));\naddDecoder(32773, () => import('./packbits').then((m) => m.default));\naddDecoder(34887, () => import('./lerc').then((m) => m.default));\n","/**\n * @module resample\n */\n\nfunction copyNewSize(array, width, height, samplesPerPixel = 1) {\n  return new (Object.getPrototypeOf(array).constructor)(width * height * samplesPerPixel);\n}\n\n/**\n * Resample the input arrays using nearest neighbor value selection.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const cy = Math.min(Math.round(relY * y), inHeight - 1);\n      for (let x = 0; x < outWidth; ++x) {\n        const cx = Math.min(Math.round(relX * x), inWidth - 1);\n        const value = array[(cy * inWidth) + cx];\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n// simple linear interpolation, code from:\n// https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\nfunction lerp(v0, v1, t) {\n  return ((1 - t) * v0) + (t * v1);\n}\n\n/**\n * Resample the input arrays using bilinear interpolation.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const rawY = relY * y;\n\n      const yl = Math.floor(rawY);\n      const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n      for (let x = 0; x < outWidth; ++x) {\n        const rawX = relX * x;\n        const tx = rawX % 1;\n\n        const xl = Math.floor(rawX);\n        const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n        const ll = array[(yl * inWidth) + xl];\n        const hl = array[(yl * inWidth) + xh];\n        const lh = array[(yh * inWidth) + xl];\n        const hh = array[(yh * inWidth) + xh];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n/**\n * Resample the input arrays using the selected resampling method.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resample(valueArrays, inWidth, inHeight, outWidth, outHeight, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n\n/**\n * Resample the pixel interleaved input array using nearest neighbor value selection.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleNearestInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const cy = Math.min(Math.round(relY * y), inHeight - 1);\n    for (let x = 0; x < outWidth; ++x) {\n      const cx = Math.min(Math.round(relX * x), inWidth - 1);\n      for (let i = 0; i < samples; ++i) {\n        const value = valueArray[(cy * inWidth * samples) + (cx * samples) + i];\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using bilinear interpolation.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleBilinearInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const rawY = relY * y;\n\n    const yl = Math.floor(rawY);\n    const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n    for (let x = 0; x < outWidth; ++x) {\n      const rawX = relX * x;\n      const tx = rawX % 1;\n\n      const xl = Math.floor(rawX);\n      const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n      for (let i = 0; i < samples; ++i) {\n        const ll = valueArray[(yl * inWidth * samples) + (xl * samples) + i];\n        const hl = valueArray[(yl * inWidth * samples) + (xh * samples) + i];\n        const lh = valueArray[(yh * inWidth * samples) + (xl * samples) + i];\n        const hh = valueArray[(yh * inWidth * samples) + (xh * samples) + i];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using the selected resampling method.\n * @param {TypedArray} valueArray The input array to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                                 interleaved data\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray} The resampled rasters\n */\nexport function resampleInterleaved(valueArray, inWidth, inHeight, outWidth, outHeight, samples, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearestInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinearInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n","import { getFloat16 } from '@petamoriken/float16';\nimport getAttribute from 'xml-utils/get-attribute';\nimport findTagsByName from 'xml-utils/find-tags-by-name';\n\nimport { photometricInterpretations, ExtraSamplesValues } from './globals';\nimport { fromWhiteIsZero, fromBlackIsZero, fromPalette, fromCMYK, fromYCbCr, fromCIELab } from './rgb';\nimport { getDecoder } from './compression';\nimport { resample, resampleInterleaved } from './resample';\n\nfunction sum(array, start, end) {\n  let s = 0;\n  for (let i = start; i < end; ++i) {\n    s += array[i];\n  }\n  return s;\n}\n\nfunction arrayForType(format, bitsPerSample, size) {\n  switch (format) {\n    case 1: // unsigned integer data\n      if (bitsPerSample <= 8) {\n        return new Uint8Array(size);\n      } else if (bitsPerSample <= 16) {\n        return new Uint16Array(size);\n      } else if (bitsPerSample <= 32) {\n        return new Uint32Array(size);\n      }\n      break;\n    case 2: // twos complement signed integer data\n      if (bitsPerSample === 8) {\n        return new Int8Array(size);\n      } else if (bitsPerSample === 16) {\n        return new Int16Array(size);\n      } else if (bitsPerSample === 32) {\n        return new Int32Array(size);\n      }\n      break;\n    case 3: // floating point data\n      switch (bitsPerSample) {\n        case 16:\n        case 32:\n          return new Float32Array(size);\n        case 64:\n          return new Float64Array(size);\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n  throw Error('Unsupported data format/bitsPerSample');\n}\n\nfunction needsNormalization(format, bitsPerSample) {\n  if ((format === 1 || format === 2) && bitsPerSample <= 32 && bitsPerSample % 8 === 0) {\n    return false;\n  } else if (format === 3 && (bitsPerSample === 16 || bitsPerSample === 32 || bitsPerSample === 64)) {\n    return false;\n  }\n  return true;\n}\n\nfunction normalizeArray(inBuffer, format, planarConfiguration, samplesPerPixel, bitsPerSample, tileWidth, tileHeight) {\n  // const inByteArray = new Uint8Array(inBuffer);\n  const view = new DataView(inBuffer);\n  const outSize = planarConfiguration === 2\n    ? tileHeight * tileWidth\n    : tileHeight * tileWidth * samplesPerPixel;\n  const samplesToTransfer = planarConfiguration === 2\n    ? 1 : samplesPerPixel;\n  const outArray = arrayForType(format, bitsPerSample, outSize);\n  // let pixel = 0;\n\n  const bitMask = parseInt('1'.repeat(bitsPerSample), 2);\n\n  if (format === 1) { // unsigned integer\n    // translation of https://github.com/OSGeo/gdal/blob/master/gdal/frmts/gtiff/geotiff.cpp#L7337\n    let pixelBitSkip;\n    // let sampleBitOffset = 0;\n    if (planarConfiguration === 1) {\n      pixelBitSkip = samplesPerPixel * bitsPerSample;\n      // sampleBitOffset = (samplesPerPixel - 1) * bitsPerSample;\n    } else {\n      pixelBitSkip = bitsPerSample;\n    }\n\n    // Bits per line rounds up to next byte boundary.\n    let bitsPerLine = tileWidth * pixelBitSkip;\n    if ((bitsPerLine & 7) !== 0) {\n      bitsPerLine = (bitsPerLine + 7) & (~7);\n    }\n\n    for (let y = 0; y < tileHeight; ++y) {\n      const lineBitOffset = y * bitsPerLine;\n      for (let x = 0; x < tileWidth; ++x) {\n        const pixelBitOffset = lineBitOffset + (x * samplesToTransfer * bitsPerSample);\n        for (let i = 0; i < samplesToTransfer; ++i) {\n          const bitOffset = pixelBitOffset + (i * bitsPerSample);\n          const outIndex = (((y * tileWidth) + x) * samplesToTransfer) + i;\n\n          const byteOffset = Math.floor(bitOffset / 8);\n          const innerBitOffset = bitOffset % 8;\n          if (innerBitOffset + bitsPerSample <= 8) {\n            outArray[outIndex] = (view.getUint8(byteOffset) >> (8 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 16) {\n            outArray[outIndex] = (view.getUint16(byteOffset) >> (16 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 24) {\n            const raw = (view.getUint16(byteOffset) << 8) | (view.getUint8(byteOffset + 2));\n            outArray[outIndex] = (raw >> (24 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else {\n            outArray[outIndex] = (view.getUint32(byteOffset) >> (32 - bitsPerSample) - innerBitOffset) & bitMask;\n          }\n\n          // let outWord = 0;\n          // for (let bit = 0; bit < bitsPerSample; ++bit) {\n          //   if (inByteArray[bitOffset >> 3]\n          //     & (0x80 >> (bitOffset & 7))) {\n          //     outWord |= (1 << (bitsPerSample - 1 - bit));\n          //   }\n          //   ++bitOffset;\n          // }\n\n          // outArray[outIndex] = outWord;\n          // outArray[pixel] = outWord;\n          // pixel += 1;\n        }\n        // bitOffset = bitOffset + pixelBitSkip - bitsPerSample;\n      }\n    }\n  } else if (format === 3) { // floating point\n    // Float16 is handled elsewhere\n    // normalize 16/24 bit floats to 32 bit floats in the array\n    // console.time();\n    // if (bitsPerSample === 16) {\n    //   for (let byte = 0, outIndex = 0; byte < inBuffer.byteLength; byte += 2, ++outIndex) {\n    //     outArray[outIndex] = getFloat16(view, byte);\n    //   }\n    // }\n    // console.timeEnd()\n  }\n\n  return outArray.buffer;\n}\n\n/**\n * GeoTIFF sub-file image.\n */\nclass GeoTIFFImage {\n  /**\n   * @constructor\n   * @param {Object} fileDirectory The parsed file directory\n   * @param {Object} geoKeys The parsed geo-keys\n   * @param {DataView} dataView The DataView for the underlying file.\n   * @param {Boolean} littleEndian Whether the file is encoded in little or big endian\n   * @param {Boolean} cache Whether or not decoded tiles shall be cached\n   * @param {Source} source The datasource to read from\n   */\n  constructor(fileDirectory, geoKeys, dataView, littleEndian, cache, source) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeys = geoKeys;\n    this.dataView = dataView;\n    this.littleEndian = littleEndian;\n    this.tiles = cache ? {} : null;\n    this.isTiled = !fileDirectory.StripOffsets;\n    const planarConfiguration = fileDirectory.PlanarConfiguration;\n    this.planarConfiguration = (typeof planarConfiguration === 'undefined') ? 1 : planarConfiguration;\n    if (this.planarConfiguration !== 1 && this.planarConfiguration !== 2) {\n      throw new Error('Invalid planar configuration.');\n    }\n\n    this.source = source;\n  }\n\n  /**\n   * Returns the associated parsed file directory.\n   * @returns {Object} the parsed file directory\n   */\n  getFileDirectory() {\n    return this.fileDirectory;\n  }\n\n  /**\n   * Returns the associated parsed geo keys.\n   * @returns {Object} the parsed geo keys\n   */\n  getGeoKeys() {\n    return this.geoKeys;\n  }\n\n  /**\n   * Returns the width of the image.\n   * @returns {Number} the width of the image\n   */\n  getWidth() {\n    return this.fileDirectory.ImageWidth;\n  }\n\n  /**\n   * Returns the height of the image.\n   * @returns {Number} the height of the image\n   */\n  getHeight() {\n    return this.fileDirectory.ImageLength;\n  }\n\n  /**\n   * Returns the number of samples per pixel.\n   * @returns {Number} the number of samples per pixel\n   */\n  getSamplesPerPixel() {\n    return typeof this.fileDirectory.SamplesPerPixel !== 'undefined'\n      ? this.fileDirectory.SamplesPerPixel : 1;\n  }\n\n  /**\n   * Returns the width of each tile.\n   * @returns {Number} the width of each tile\n   */\n  getTileWidth() {\n    return this.isTiled ? this.fileDirectory.TileWidth : this.getWidth();\n  }\n\n  /**\n   * Returns the height of each tile.\n   * @returns {Number} the height of each tile\n   */\n  getTileHeight() {\n    if (this.isTiled) {\n      return this.fileDirectory.TileLength;\n    }\n    if (typeof this.fileDirectory.RowsPerStrip !== 'undefined') {\n      return Math.min(this.fileDirectory.RowsPerStrip, this.getHeight());\n    }\n    return this.getHeight();\n  }\n\n  getBlockWidth() {\n    return this.getTileWidth();\n  }\n\n  getBlockHeight(y) {\n    if (this.isTiled || (y + 1) * this.getTileHeight() <= this.getHeight()) {\n      return this.getTileHeight();\n    } else {\n      return this.getHeight() - (y * this.getTileHeight());\n    }\n  }\n\n  /**\n   * Calculates the number of bytes for each pixel across all samples. Only full\n   * bytes are supported, an exception is thrown when this is not the case.\n   * @returns {Number} the bytes per pixel\n   */\n  getBytesPerPixel() {\n    let bytes = 0;\n    for (let i = 0; i < this.fileDirectory.BitsPerSample.length; ++i) {\n      bytes += this.getSampleByteSize(i);\n    }\n    return bytes;\n  }\n\n  getSampleByteSize(i) {\n    if (i >= this.fileDirectory.BitsPerSample.length) {\n      throw new RangeError(`Sample index ${i} is out of range.`);\n    }\n    return Math.ceil(this.fileDirectory.BitsPerSample[i] / 8);\n  }\n\n  getReaderForSample(sampleIndex) {\n    const format = this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n    const bitsPerSample = this.fileDirectory.BitsPerSample[sampleIndex];\n    switch (format) {\n      case 1: // unsigned integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getUint8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getUint16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getUint32;\n        }\n        break;\n      case 2: // twos complement signed integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getInt8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getInt16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getInt32;\n        }\n        break;\n      case 3:\n        switch (bitsPerSample) {\n          case 16:\n            return function (offset, littleEndian) {\n              return getFloat16(this, offset, littleEndian);\n            };\n          case 32:\n            return DataView.prototype.getFloat32;\n          case 64:\n            return DataView.prototype.getFloat64;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n    throw Error('Unsupported data format/bitsPerSample');\n  }\n\n  getSampleFormat(sampleIndex = 0) {\n    return this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n  }\n\n  getBitsPerSample(sampleIndex = 0) {\n    return this.fileDirectory.BitsPerSample[sampleIndex];\n  }\n\n  getArrayForSample(sampleIndex, size) {\n    const format = this.getSampleFormat(sampleIndex);\n    const bitsPerSample = this.getBitsPerSample(sampleIndex);\n    return arrayForType(format, bitsPerSample, size);\n  }\n\n  /**\n   * Returns the decoded strip or tile.\n   * @param {Number} x the strip or tile x-offset\n   * @param {Number} y the tile y-offset (0 for stripped images)\n   * @param {Number} sample the sample to get for separated samples\n   * @param {Pool|AbstractDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise.<ArrayBuffer>}\n   */\n  async getTileOrStrip(x, y, sample, poolOrDecoder, signal) {\n    const numTilesPerRow = Math.ceil(this.getWidth() / this.getTileWidth());\n    const numTilesPerCol = Math.ceil(this.getHeight() / this.getTileHeight());\n    let index;\n    const { tiles } = this;\n    if (this.planarConfiguration === 1) {\n      index = (y * numTilesPerRow) + x;\n    } else if (this.planarConfiguration === 2) {\n      index = (sample * numTilesPerRow * numTilesPerCol) + (y * numTilesPerRow) + x;\n    }\n\n    let offset;\n    let byteCount;\n    if (this.isTiled) {\n      offset = this.fileDirectory.TileOffsets[index];\n      byteCount = this.fileDirectory.TileByteCounts[index];\n    } else {\n      offset = this.fileDirectory.StripOffsets[index];\n      byteCount = this.fileDirectory.StripByteCounts[index];\n    }\n    const slice = (await this.source.fetch([{ offset, length: byteCount }], signal))[0];\n\n    let request;\n    if (tiles === null || !tiles[index]) {\n    // resolve each request by potentially applying array normalization\n      request = (async () => {\n        let data = await poolOrDecoder.decode(this.fileDirectory, slice);\n        const sampleFormat = this.getSampleFormat();\n        const bitsPerSample = this.getBitsPerSample();\n        if (needsNormalization(sampleFormat, bitsPerSample)) {\n          data = normalizeArray(\n            data,\n            sampleFormat,\n            this.planarConfiguration,\n            this.getSamplesPerPixel(),\n            bitsPerSample,\n            this.getTileWidth(),\n            this.getBlockHeight(y),\n          );\n        }\n        return data;\n      })();\n\n      // set the cache\n      if (tiles !== null) {\n        tiles[index] = request;\n      }\n    } else {\n      // get from the cache\n      request = tiles[index];\n    }\n\n    // cache the tile request\n    return { x, y, sample, data: await request };\n  }\n\n  /**\n   * Internal read function.\n   * @private\n   * @param {Array} imageWindow The image window in pixel coordinates\n   * @param {Array} samples The selected samples (0-based indices)\n   * @param {TypedArray[]|TypedArray} valueArrays The array(s) to write into\n   * @param {Boolean} interleave Whether or not to write in an interleaved manner\n   * @param {Pool|AbstractDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {number} width the width of window to be read into\n   * @param {number} height the height of window to be read into\n   * @param {number} resampleMethod the resampling method to be used when interpolating\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise<TypedArray[]>|Promise<TypedArray>}\n   */\n  async _readRaster(imageWindow, samples, valueArrays, interleave, poolOrDecoder, width,\n    height, resampleMethod, signal) {\n    const tileWidth = this.getTileWidth();\n    const tileHeight = this.getTileHeight();\n    const imageWidth = this.getWidth();\n    const imageHeight = this.getHeight();\n\n    const minXTile = Math.max(Math.floor(imageWindow[0] / tileWidth), 0);\n    const maxXTile = Math.min(\n      Math.ceil(imageWindow[2] / tileWidth),\n      Math.ceil(imageWidth / tileWidth),\n    );\n    const minYTile = Math.max(Math.floor(imageWindow[1] / tileHeight), 0);\n    const maxYTile = Math.min(\n      Math.ceil(imageWindow[3] / tileHeight),\n      Math.ceil(imageHeight / tileHeight),\n    );\n    const windowWidth = imageWindow[2] - imageWindow[0];\n\n    let bytesPerPixel = this.getBytesPerPixel();\n\n    const srcSampleOffsets = [];\n    const sampleReaders = [];\n    for (let i = 0; i < samples.length; ++i) {\n      if (this.planarConfiguration === 1) {\n        srcSampleOffsets.push(sum(this.fileDirectory.BitsPerSample, 0, samples[i]) / 8);\n      } else {\n        srcSampleOffsets.push(0);\n      }\n      sampleReaders.push(this.getReaderForSample(samples[i]));\n    }\n\n    const promises = [];\n    const { littleEndian } = this;\n\n    for (let yTile = minYTile; yTile < maxYTile; ++yTile) {\n      for (let xTile = minXTile; xTile < maxXTile; ++xTile) {\n        for (let sampleIndex = 0; sampleIndex < samples.length; ++sampleIndex) {\n          const si = sampleIndex;\n          const sample = samples[sampleIndex];\n          if (this.planarConfiguration === 2) {\n            bytesPerPixel = this.getSampleByteSize(sampleIndex);\n          }\n          const promise = this.getTileOrStrip(xTile, yTile, sample, poolOrDecoder, signal);\n          promises.push(promise);\n          promise.then((tile) => {\n            const buffer = tile.data;\n            const dataView = new DataView(buffer);\n            const blockHeight = this.getBlockHeight(tile.y);\n            const firstLine = tile.y * tileHeight;\n            const firstCol = tile.x * tileWidth;\n            const lastLine = firstLine + blockHeight;\n            const lastCol = (tile.x + 1) * tileWidth;\n            const reader = sampleReaders[si];\n\n            const ymax = Math.min(blockHeight, blockHeight - (lastLine - imageWindow[3]), imageHeight - firstLine);\n            const xmax = Math.min(tileWidth, tileWidth - (lastCol - imageWindow[2]), imageWidth - firstCol);\n\n            for (let y = Math.max(0, imageWindow[1] - firstLine); y < ymax; ++y) {\n              for (let x = Math.max(0, imageWindow[0] - firstCol); x < xmax; ++x) {\n                const pixelOffset = ((y * tileWidth) + x) * bytesPerPixel;\n                const value = reader.call(\n                  dataView, pixelOffset + srcSampleOffsets[si], littleEndian,\n                );\n                let windowCoordinate;\n                if (interleave) {\n                  windowCoordinate = ((y + firstLine - imageWindow[1]) * windowWidth * samples.length)\n                    + ((x + firstCol - imageWindow[0]) * samples.length)\n                    + si;\n                  valueArrays[windowCoordinate] = value;\n                } else {\n                  windowCoordinate = (\n                    (y + firstLine - imageWindow[1]) * windowWidth\n                  ) + x + firstCol - imageWindow[0];\n                  valueArrays[si][windowCoordinate] = value;\n                }\n              }\n            }\n          });\n        }\n      }\n    }\n    await Promise.all(promises);\n\n    if ((width && (imageWindow[2] - imageWindow[0]) !== width)\n        || (height && (imageWindow[3] - imageWindow[1]) !== height)) {\n      let resampled;\n      if (interleave) {\n        resampled = resampleInterleaved(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          samples.length,\n          resampleMethod,\n        );\n      } else {\n        resampled = resample(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          resampleMethod,\n        );\n      }\n      resampled.width = width;\n      resampled.height = height;\n      return resampled;\n    }\n\n    valueArrays.width = width || imageWindow[2] - imageWindow[0];\n    valueArrays.height = height || imageWindow[3] - imageWindow[1];\n\n    return valueArrays;\n  }\n\n  /**\n   * Reads raster data from the image. This function reads all selected samples\n   * into separate arrays of the correct type for that sample or into a single\n   * combined array when `interleave` is set. When provided, only a subset\n   * of the raster is read for each sample.\n   *\n   * @param {Object} [options={}] optional parameters\n   * @param {Array} [options.window=whole image] the subset to read data from.\n   * @param {Array} [options.samples=all samples] the selection of samples to read from.\n   * @param {Boolean} [options.interleave=false] whether the data shall be read\n   *                                             in one single array or separate\n   *                                             arrays.\n   * @param {Number} [options.pool=null] The optional decoder pool to use.\n   * @param {number} [options.width] The desired width of the output. When the width is\n   *                                 not the same as the images, resampling will be\n   *                                 performed.\n   * @param {number} [options.height] The desired height of the output. When the width\n   *                                  is not the same as the images, resampling will\n   *                                  be performed.\n   * @param {string} [options.resampleMethod='nearest'] The desired resampling method.\n   * @param {number|number[]} [options.fillValue] The value to use for parts of the image\n   *                                              outside of the images extent. When\n   *                                              multiple samples are requested, an\n   *                                              array of fill values can be passed.\n   * @param {AbortSignal} [options.signal] An AbortSignal that may be signalled if the request is\n   *                                       to be aborted\n   * @returns {Promise.<(TypedArray|TypedArray[])>} the decoded arrays as a promise\n   */\n  async readRasters({\n    window: wnd, samples = [], interleave, pool = null,\n    width, height, resampleMethod, fillValue, signal,\n  } = {}) {\n    const imageWindow = wnd || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const imageWindowWidth = imageWindow[2] - imageWindow[0];\n    const imageWindowHeight = imageWindow[3] - imageWindow[1];\n    const numPixels = imageWindowWidth * imageWindowHeight;\n    const samplesPerPixel = this.getSamplesPerPixel();\n\n    if (!samples || !samples.length) {\n      for (let i = 0; i < samplesPerPixel; ++i) {\n        samples.push(i);\n      }\n    } else {\n      for (let i = 0; i < samples.length; ++i) {\n        if (samples[i] >= samplesPerPixel) {\n          return Promise.reject(new RangeError(`Invalid sample index '${samples[i]}'.`));\n        }\n      }\n    }\n    let valueArrays;\n    if (interleave) {\n      const format = this.fileDirectory.SampleFormat\n        ? Math.max.apply(null, this.fileDirectory.SampleFormat) : 1;\n      const bitsPerSample = Math.max.apply(null, this.fileDirectory.BitsPerSample);\n      valueArrays = arrayForType(format, bitsPerSample, numPixels * samples.length);\n      if (fillValue) {\n        valueArrays.fill(fillValue);\n      }\n    } else {\n      valueArrays = [];\n      for (let i = 0; i < samples.length; ++i) {\n        const valueArray = this.getArrayForSample(samples[i], numPixels);\n        if (Array.isArray(fillValue) && i < fillValue.length) {\n          valueArray.fill(fillValue[i]);\n        } else if (fillValue && !Array.isArray(fillValue)) {\n          valueArray.fill(fillValue);\n        }\n        valueArrays.push(valueArray);\n      }\n    }\n\n    const poolOrDecoder = pool || await getDecoder(this.fileDirectory);\n\n    const result = await this._readRaster(\n      imageWindow, samples, valueArrays, interleave, poolOrDecoder, width, height, resampleMethod, signal,\n    );\n    return result;\n  }\n\n  /**\n   * Reads raster data from the image as RGB. The result is always an\n   * interleaved typed array.\n   * Colorspaces other than RGB will be transformed to RGB, color maps expanded.\n   * When no other method is applicable, the first sample is used to produce a\n   * greayscale image.\n   * When provided, only a subset of the raster is read for each sample.\n   *\n   * @param {Object} [options] optional parameters\n   * @param {Array} [options.window=whole image] the subset to read data from.\n   * @param {Boolean} [options.interleave=true] whether the data shall be read\n   *                                             in one single array or separate\n   *                                             arrays.\n   * @param {Number} [options.pool=null] The optional decoder pool to use.\n   * @param {number} [options.width] The desired width of the output. When the width is no the\n   *                                 same as the images, resampling will be performed.\n   * @param {number} [options.height] The desired height of the output. When the width is no the\n   *                                  same as the images, resampling will be performed.\n   * @param {string} [options.resampleMethod='nearest'] The desired resampling method.\n   * @param {bool} [options.enableAlpha=false] Enable reading alpha channel if present.\n   * @param {AbortSignal} [options.signal] An AbortSignal that may be signalled if the request is\n   *                                       to be aborted\n   * @returns {Promise.<TypedArray|TypedArray[]>} the RGB array as a Promise\n   */\n  async readRGB({ window, interleave = true, pool = null, width, height,\n    resampleMethod, enableAlpha = false, signal } = {}) {\n    const imageWindow = window || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const pi = this.fileDirectory.PhotometricInterpretation;\n\n    if (pi === photometricInterpretations.RGB) {\n      let s = [0, 1, 2];\n      if ((!(this.fileDirectory.ExtraSamples === ExtraSamplesValues.Unspecified)) && enableAlpha) {\n        s = [];\n        for (let i = 0; i < this.fileDirectory.BitsPerSample.length; i += 1) {\n          s.push(i);\n        }\n      }\n      return this.readRasters({\n        window,\n        interleave,\n        samples: s,\n        pool,\n        width,\n        height,\n        resampleMethod,\n        signal,\n      });\n    }\n\n    let samples;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n      case photometricInterpretations.BlackIsZero:\n      case photometricInterpretations.Palette:\n        samples = [0];\n        break;\n      case photometricInterpretations.CMYK:\n        samples = [0, 1, 2, 3];\n        break;\n      case photometricInterpretations.YCbCr:\n      case photometricInterpretations.CIELab:\n        samples = [0, 1, 2];\n        break;\n      default:\n        throw new Error('Invalid or unsupported photometric interpretation.');\n    }\n\n    const subOptions = {\n      window: imageWindow,\n      interleave: true,\n      samples,\n      pool,\n      width,\n      height,\n      resampleMethod,\n      signal,\n    };\n    const { fileDirectory } = this;\n    const raster = await this.readRasters(subOptions);\n\n    const max = 2 ** this.fileDirectory.BitsPerSample[0];\n    let data;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n        data = fromWhiteIsZero(raster, max);\n        break;\n      case photometricInterpretations.BlackIsZero:\n        data = fromBlackIsZero(raster, max);\n        break;\n      case photometricInterpretations.Palette:\n        data = fromPalette(raster, fileDirectory.ColorMap);\n        break;\n      case photometricInterpretations.CMYK:\n        data = fromCMYK(raster);\n        break;\n      case photometricInterpretations.YCbCr:\n        data = fromYCbCr(raster);\n        break;\n      case photometricInterpretations.CIELab:\n        data = fromCIELab(raster);\n        break;\n      default:\n        throw new Error('Unsupported photometric interpretation.');\n    }\n\n    // if non-interleaved data is requested, we must split the channels\n    // into their respective arrays\n    if (!interleave) {\n      const red = new Uint8Array(data.length / 3);\n      const green = new Uint8Array(data.length / 3);\n      const blue = new Uint8Array(data.length / 3);\n      for (let i = 0, j = 0; i < data.length; i += 3, ++j) {\n        red[j] = data[i];\n        green[j] = data[i + 1];\n        blue[j] = data[i + 2];\n      }\n      data = [red, green, blue];\n    }\n\n    data.width = raster.width;\n    data.height = raster.height;\n    return data;\n  }\n\n  /**\n   * Returns an array of tiepoints.\n   * @returns {Object[]}\n   */\n  getTiePoints() {\n    if (!this.fileDirectory.ModelTiepoint) {\n      return [];\n    }\n\n    const tiePoints = [];\n    for (let i = 0; i < this.fileDirectory.ModelTiepoint.length; i += 6) {\n      tiePoints.push({\n        i: this.fileDirectory.ModelTiepoint[i],\n        j: this.fileDirectory.ModelTiepoint[i + 1],\n        k: this.fileDirectory.ModelTiepoint[i + 2],\n        x: this.fileDirectory.ModelTiepoint[i + 3],\n        y: this.fileDirectory.ModelTiepoint[i + 4],\n        z: this.fileDirectory.ModelTiepoint[i + 5],\n      });\n    }\n    return tiePoints;\n  }\n\n  /**\n   * Returns the parsed GDAL metadata items.\n   *\n   * If sample is passed to null, dataset-level metadata will be returned.\n   * Otherwise only metadata specific to the provided sample will be returned.\n   *\n   * @param {Number} [sample=null] The sample index.\n   * @returns {Object}\n   */\n  getGDALMetadata(sample = null) {\n    const metadata = {};\n    if (!this.fileDirectory.GDAL_METADATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_METADATA;\n\n    let items = findTagsByName(string, 'Item');\n\n    if (sample !== null) {\n      items = items.filter((item) => Number(getAttribute(item, 'sample')) === sample);\n    }\n\n    for (let i = 0; i < items.length; ++i) {\n      const item = items[i];\n      metadata[getAttribute(item, 'name')] = item.inner;\n    }\n    return metadata;\n  }\n\n  /**\n   * Returns the GDAL nodata value\n   * @returns {Number} or null\n   */\n  getGDALNoData() {\n    if (!this.fileDirectory.GDAL_NODATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_NODATA;\n    return Number(string.substring(0, string.length - 1));\n  }\n\n  /**\n   * Returns the image origin as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @returns {Array} The origin as a vector\n   */\n  getOrigin() {\n    const tiePoints = this.fileDirectory.ModelTiepoint;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n    if (tiePoints && tiePoints.length === 6) {\n      return [\n        tiePoints[3],\n        tiePoints[4],\n        tiePoints[5],\n      ];\n    }\n    if (modelTransformation) {\n      return [\n        modelTransformation[3],\n        modelTransformation[7],\n        modelTransformation[11],\n      ];\n    }\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns the image resolution as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @param {GeoTIFFImage} [referenceImage=null] A reference image to calculate the resolution from\n   *                                             in cases when the current image does not have the\n   *                                             required tags on its own.\n   * @returns {Array} The resolution as a vector\n   */\n  getResolution(referenceImage = null) {\n    const modelPixelScale = this.fileDirectory.ModelPixelScale;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n\n    if (modelPixelScale) {\n      return [\n        modelPixelScale[0],\n        -modelPixelScale[1],\n        modelPixelScale[2],\n      ];\n    }\n    if (modelTransformation) {\n      return [\n        modelTransformation[0],\n        modelTransformation[5],\n        modelTransformation[10],\n      ];\n    }\n\n    if (referenceImage) {\n      const [refResX, refResY, refResZ] = referenceImage.getResolution();\n      return [\n        refResX * referenceImage.getWidth() / this.getWidth(),\n        refResY * referenceImage.getHeight() / this.getHeight(),\n        refResZ * referenceImage.getWidth() / this.getWidth(),\n      ];\n    }\n\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns whether or not the pixels of the image depict an area (or point).\n   * @returns {Boolean} Whether the pixels are a point\n   */\n  pixelIsArea() {\n    return this.geoKeys.GTRasterTypeGeoKey === 1;\n  }\n\n  /**\n   * Returns the image bounding box as an array of 4 values: min-x, min-y,\n   * max-x and max-y. When the image has no affine transformation, then an\n   * exception is thrown.\n   * @returns {Array} The bounding box\n   */\n  getBoundingBox() {\n    const origin = this.getOrigin();\n    const resolution = this.getResolution();\n\n    const x1 = origin[0];\n    const y1 = origin[1];\n\n    const x2 = x1 + (resolution[0] * this.getWidth());\n    const y2 = y1 + (resolution[1] * this.getHeight());\n\n    return [\n      Math.min(x1, x2),\n      Math.min(y1, y2),\n      Math.max(x1, x2),\n      Math.max(y1, y2),\n    ];\n  }\n}\n\nexport default GeoTIFFImage;\n","import { getFloat16 } from '@petamoriken/float16';\n\nexport default class DataView64 {\n  constructor(arrayBuffer) {\n    this._dataView = new DataView(arrayBuffer);\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  getUint64(offset, littleEndian) {\n    const left = this.getUint32(offset, littleEndian);\n    const right = this.getUint32(offset + 4, littleEndian);\n    let combined;\n    if (littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  getInt64(offset, littleEndian) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (littleEndian ? 7 : 0)) & 0x80) > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(offset + (littleEndian ? i : 7 - i));\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  getUint8(offset, littleEndian) {\n    return this._dataView.getUint8(offset, littleEndian);\n  }\n\n  getInt8(offset, littleEndian) {\n    return this._dataView.getInt8(offset, littleEndian);\n  }\n\n  getUint16(offset, littleEndian) {\n    return this._dataView.getUint16(offset, littleEndian);\n  }\n\n  getInt16(offset, littleEndian) {\n    return this._dataView.getInt16(offset, littleEndian);\n  }\n\n  getUint32(offset, littleEndian) {\n    return this._dataView.getUint32(offset, littleEndian);\n  }\n\n  getInt32(offset, littleEndian) {\n    return this._dataView.getInt32(offset, littleEndian);\n  }\n\n  getFloat16(offset, littleEndian) {\n    return getFloat16(this._dataView, offset, littleEndian);\n  }\n\n  getFloat32(offset, littleEndian) {\n    return this._dataView.getFloat32(offset, littleEndian);\n  }\n\n  getFloat64(offset, littleEndian) {\n    return this._dataView.getFloat64(offset, littleEndian);\n  }\n}\n","export default class DataSlice {\n  constructor(arrayBuffer, sliceOffset, littleEndian, bigTiff) {\n    this._dataView = new DataView(arrayBuffer);\n    this._sliceOffset = sliceOffset;\n    this._littleEndian = littleEndian;\n    this._bigTiff = bigTiff;\n  }\n\n  get sliceOffset() {\n    return this._sliceOffset;\n  }\n\n  get sliceTop() {\n    return this._sliceOffset + this.buffer.byteLength;\n  }\n\n  get littleEndian() {\n    return this._littleEndian;\n  }\n\n  get bigTiff() {\n    return this._bigTiff;\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  covers(offset, length) {\n    return this.sliceOffset <= offset && this.sliceTop >= offset + length;\n  }\n\n  readUint8(offset) {\n    return this._dataView.getUint8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt8(offset) {\n    return this._dataView.getInt8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint16(offset) {\n    return this._dataView.getUint16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt16(offset) {\n    return this._dataView.getInt16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint32(offset) {\n    return this._dataView.getUint32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt32(offset) {\n    return this._dataView.getInt32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat32(offset) {\n    return this._dataView.getFloat32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat64(offset) {\n    return this._dataView.getFloat64(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint64(offset) {\n    const left = this.readUint32(offset);\n    const right = this.readUint32(offset + 4);\n    let combined;\n    if (this._littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  readInt64(offset) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (this._littleEndian ? 7 : 0)) & 0x80)\n      > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(\n        offset + (this._littleEndian ? i : 7 - i),\n      );\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  readOffset(offset) {\n    if (this._bigTiff) {\n      return this.readUint64(offset);\n    }\n    return this.readUint32(offset);\n  }\n}\n","export function assign(target, source) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n\nexport function chunk(iterable, length) {\n  const results = [];\n  const lengthOfIterable = iterable.length;\n  for (let i = 0; i < lengthOfIterable; i += length) {\n    const chunked = [];\n    for (let ci = i; ci < i + length; ci++) {\n      chunked.push(iterable[ci]);\n    }\n    results.push(chunked);\n  }\n  return results;\n}\n\nexport function endsWith(string, expectedEnding) {\n  if (string.length < expectedEnding.length) {\n    return false;\n  }\n  const actualEnding = string.substr(string.length - expectedEnding.length);\n  return actualEnding === expectedEnding;\n}\n\nexport function forEach(iterable, func) {\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    func(iterable[i], i);\n  }\n}\n\nexport function invert(oldObj) {\n  const newObj = {};\n  for (const key in oldObj) {\n    if (oldObj.hasOwnProperty(key)) {\n      const value = oldObj[key];\n      newObj[value] = key;\n    }\n  }\n  return newObj;\n}\n\nexport function range(n) {\n  const results = [];\n  for (let i = 0; i < n; i++) {\n    results.push(i);\n  }\n  return results;\n}\n\nexport function times(numTimes, func) {\n  const results = [];\n  for (let i = 0; i < numTimes; i++) {\n    results.push(func(i));\n  }\n  return results;\n}\n\nexport function toArray(iterable) {\n  const results = [];\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    results.push(iterable[i]);\n  }\n  return results;\n}\n\nexport function toArrayRecursively(input) {\n  if (input.length) {\n    return toArray(input).map(toArrayRecursively);\n  }\n  return input;\n}\n\n// copied from https://github.com/academia-de-codigo/parse-content-range-header/blob/master/index.js\nexport function parseContentRange(headerValue) {\n  if (!headerValue) {\n    return null;\n  }\n\n  if (typeof headerValue !== 'string') {\n    throw new Error('invalid argument');\n  }\n\n  const parseInt = (number) => Number.parseInt(number, 10);\n\n  // Check for presence of unit\n  let matches = headerValue.match(/^(\\w*) /);\n  const unit = matches && matches[1];\n\n  // check for start-end/size header format\n  matches = headerValue.match(/(\\d+)-(\\d+)\\/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: parseInt(matches[1]),\n      last: parseInt(matches[2]),\n      length: matches[3] === '*' ? null : parseInt(matches[3]),\n    };\n  }\n\n  // check for size header format\n  matches = headerValue.match(/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: null,\n      last: null,\n      length: matches[1] === '*' ? null : parseInt(matches[1]),\n    };\n  }\n\n  return null;\n}\n\n/*\n * Promisified wrapper around 'setTimeout' to allow 'await'\n */\nexport async function wait(milliseconds) {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n\nexport function zip(a, b) {\n  const A = Array.isArray(a) ? a : Array.from(a);\n  const B = Array.isArray(b) ? b : Array.from(b);\n  return A.map((k, i) => [k, B[i]]);\n}\n\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class AbortError extends Error {\n  constructor(params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AbortError);\n    }\n\n    this.name = 'AbortError';\n  }\n}\n\nexport class CustomAggregateError extends Error {\n  constructor(errors, message) {\n    super(message);\n    this.errors = errors;\n    this.message = message;\n    this.name = 'AggregateError';\n  }\n}\n\nexport const AggregateError = CustomAggregateError;\n","import { BaseSource } from './basesource';\nimport { AbortError } from '../utils';\n\nclass ArrayBufferSource extends BaseSource {\n  constructor(arrayBuffer) {\n    super();\n    this.arrayBuffer = arrayBuffer;\n  }\n\n  fetchSlice(slice, signal) {\n    if (signal && signal.aborted) {\n      throw new AbortError('Request aborted');\n    }\n    return this.arrayBuffer.slice(slice.offset, slice.offset + slice.length);\n  }\n}\n\nexport function makeBufferSource(arrayBuffer) {\n  return new ArrayBufferSource(arrayBuffer);\n}\n","/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\n\nexport class BaseSource {\n  /**\n   *\n   * @param {Slice[]} slices\n   * @returns {ArrayBuffer[]}\n   */\n  async fetch(slices, signal = undefined) {\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  /**\n   *\n   * @param {Slice} slice\n   * @returns {ArrayBuffer}\n   */\n  async fetchSlice(slice) {\n    throw new Error(`fetching of slice ${slice} not possible, not implemented`);\n  }\n\n  /**\n   * Returns the filesize if already determined and null otherwise\n   */\n  get fileSize() {\n    return null;\n  }\n\n  async close() {\n    // no-op by default\n  }\n}\n","import GeoTIFFImage from './geotiffimage';\nimport DataView64 from './dataview64';\nimport DataSlice from './dataslice';\nimport Pool from './pool';\n\nimport { makeRemoteSource } from './source/remote';\nimport { makeBufferSource } from './source/arraybuffer';\nimport { makeFileReaderSource } from './source/filereader';\nimport { makeFileSource } from './source/file';\n\nimport { fieldTypes, fieldTagNames, arrayFields, geoKeyNames } from './globals';\nimport { writeGeotiff } from './geotiffwriter';\nimport * as globals from './globals';\nimport * as rgb from './rgb';\nimport { getDecoder, addDecoder } from './compression';\nimport { setLogger } from './logging';\n\nexport { globals };\nexport { rgb };\nexport { getDecoder, addDecoder };\nexport { setLogger };\n\nfunction getFieldTypeLength(fieldType) {\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.SBYTE: case fieldTypes.UNDEFINED:\n      return 1;\n    case fieldTypes.SHORT: case fieldTypes.SSHORT:\n      return 2;\n    case fieldTypes.LONG: case fieldTypes.SLONG: case fieldTypes.FLOAT: case fieldTypes.IFD:\n      return 4;\n    case fieldTypes.RATIONAL: case fieldTypes.SRATIONAL: case fieldTypes.DOUBLE:\n    case fieldTypes.LONG8: case fieldTypes.SLONG8: case fieldTypes.IFD8:\n      return 8;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n}\n\nfunction parseGeoKeyDirectory(fileDirectory) {\n  const rawGeoKeyDirectory = fileDirectory.GeoKeyDirectory;\n  if (!rawGeoKeyDirectory) {\n    return null;\n  }\n\n  const geoKeyDirectory = {};\n  for (let i = 4; i <= rawGeoKeyDirectory[3] * 4; i += 4) {\n    const key = geoKeyNames[rawGeoKeyDirectory[i]];\n    const location = (rawGeoKeyDirectory[i + 1])\n      ? (fieldTagNames[rawGeoKeyDirectory[i + 1]]) : null;\n    const count = rawGeoKeyDirectory[i + 2];\n    const offset = rawGeoKeyDirectory[i + 3];\n\n    let value = null;\n    if (!location) {\n      value = offset;\n    } else {\n      value = fileDirectory[location];\n      if (typeof value === 'undefined' || value === null) {\n        throw new Error(`Could not get value of geoKey '${key}'.`);\n      } else if (typeof value === 'string') {\n        value = value.substring(offset, offset + count - 1);\n      } else if (value.subarray) {\n        value = value.subarray(offset, offset + count);\n        if (count === 1) {\n          value = value[0];\n        }\n      }\n    }\n    geoKeyDirectory[key] = value;\n  }\n  return geoKeyDirectory;\n}\n\nfunction getValues(dataSlice, fieldType, count, offset) {\n  let values = null;\n  let readMethod = null;\n  const fieldTypeLength = getFieldTypeLength(fieldType);\n\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.UNDEFINED:\n      values = new Uint8Array(count); readMethod = dataSlice.readUint8;\n      break;\n    case fieldTypes.SBYTE:\n      values = new Int8Array(count); readMethod = dataSlice.readInt8;\n      break;\n    case fieldTypes.SHORT:\n      values = new Uint16Array(count); readMethod = dataSlice.readUint16;\n      break;\n    case fieldTypes.SSHORT:\n      values = new Int16Array(count); readMethod = dataSlice.readInt16;\n      break;\n    case fieldTypes.LONG: case fieldTypes.IFD:\n      values = new Uint32Array(count); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SLONG:\n      values = new Int32Array(count); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.LONG8: case fieldTypes.IFD8:\n      values = new Array(count); readMethod = dataSlice.readUint64;\n      break;\n    case fieldTypes.SLONG8:\n      values = new Array(count); readMethod = dataSlice.readInt64;\n      break;\n    case fieldTypes.RATIONAL:\n      values = new Uint32Array(count * 2); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SRATIONAL:\n      values = new Int32Array(count * 2); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.FLOAT:\n      values = new Float32Array(count); readMethod = dataSlice.readFloat32;\n      break;\n    case fieldTypes.DOUBLE:\n      values = new Float64Array(count); readMethod = dataSlice.readFloat64;\n      break;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n\n  // normal fields\n  if (!(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n    for (let i = 0; i < count; ++i) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n    }\n  } else { // RATIONAL or SRATIONAL\n    for (let i = 0; i < count; i += 2) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n      values[i + 1] = readMethod.call(\n        dataSlice, offset + ((i * fieldTypeLength) + 4),\n      );\n    }\n  }\n\n  if (fieldType === fieldTypes.ASCII) {\n    return new TextDecoder('utf-8').decode(values);\n  }\n  return values;\n}\n\n/**\n * Data class to store the parsed file directory, geo key directory and\n * offset to the next IFD\n */\nclass ImageFileDirectory {\n  constructor(fileDirectory, geoKeyDirectory, nextIFDByteOffset) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeyDirectory = geoKeyDirectory;\n    this.nextIFDByteOffset = nextIFDByteOffset;\n  }\n}\n\n/**\n * Error class for cases when an IFD index was requested, that does not exist\n * in the file.\n */\nclass GeoTIFFImageIndexError extends Error {\n  constructor(index) {\n    super(`No image at index ${index}`);\n    this.index = index;\n  }\n}\n\nclass GeoTIFFBase {\n  /**\n   * (experimental) Reads raster data from the best fitting image. This function uses\n   * the image with the lowest resolution that is still a higher resolution than the\n   * requested resolution.\n   * When specified, the `bbox` option is translated to the `window` option and the\n   * `resX` and `resY` to `width` and `height` respectively.\n   * Then, the [readRasters]{@link GeoTIFFImage#readRasters} method of the selected\n   * image is called and the result returned.\n   * @see GeoTIFFImage.readRasters\n   * @param {Object} [options={}] optional parameters\n   * @param {Array} [options.window=whole image] the subset to read data from.\n   * @param {Array} [options.bbox=whole image] the subset to read data from in\n   *                                           geographical coordinates.\n   * @param {Array} [options.samples=all samples] the selection of samples to read from.\n   * @param {Boolean} [options.interleave=false] whether the data shall be read\n   *                                             in one single array or separate\n   *                                             arrays.\n   * @param {Number} [options.pool=null] The optional decoder pool to use.\n   * @param {Number} [options.width] The desired width of the output. When the width is not the\n   *                                 same as the images, resampling will be performed.\n   * @param {Number} [options.height] The desired height of the output. When the width is not the\n   *                                  same as the images, resampling will be performed.\n   * @param {String} [options.resampleMethod='nearest'] The desired resampling method.\n   * @param {AbortSignal} [options.signal] An AbortSignal that may be signalled if the request is\n   *                                       to be aborted\n   * @param {Number|Number[]} [options.fillValue] The value to use for parts of the image\n   *                                              outside of the images extent. When multiple\n   *                                              samples are requested, an array of fill values\n   *                                              can be passed.\n   * @returns {Promise.<(TypedArray|TypedArray[])>} the decoded arrays as a promise\n   */\n  async readRasters(options = {}) {\n    const { window: imageWindow, width, height } = options;\n    let { resX, resY, bbox } = options;\n\n    const firstImage = await this.getImage();\n    let usedImage = firstImage;\n    const imageCount = await this.getImageCount();\n    const imgBBox = firstImage.getBoundingBox();\n\n    if (imageWindow && bbox) {\n      throw new Error('Both \"bbox\" and \"window\" passed.');\n    }\n\n    // if width/height is passed, transform it to resolution\n    if (width || height) {\n      // if we have an image window (pixel coordinates), transform it to a BBox\n      // using the origin/resolution of the first image.\n      if (imageWindow) {\n        const [oX, oY] = firstImage.getOrigin();\n        const [rX, rY] = firstImage.getResolution();\n\n        bbox = [\n          oX + (imageWindow[0] * rX),\n          oY + (imageWindow[1] * rY),\n          oX + (imageWindow[2] * rX),\n          oY + (imageWindow[3] * rY),\n        ];\n      }\n\n      // if we have a bbox (or calculated one)\n\n      const usedBBox = bbox || imgBBox;\n\n      if (width) {\n        if (resX) {\n          throw new Error('Both width and resX passed');\n        }\n        resX = (usedBBox[2] - usedBBox[0]) / width;\n      }\n      if (height) {\n        if (resY) {\n          throw new Error('Both width and resY passed');\n        }\n        resY = (usedBBox[3] - usedBBox[1]) / height;\n      }\n    }\n\n    // if resolution is set or calculated, try to get the image with the worst acceptable resolution\n    if (resX || resY) {\n      const allImages = [];\n      for (let i = 0; i < imageCount; ++i) {\n        const image = await this.getImage(i);\n        const { SubfileType: subfileType, NewSubfileType: newSubfileType } = image.fileDirectory;\n        if (i === 0 || subfileType === 2 || newSubfileType & 1) {\n          allImages.push(image);\n        }\n      }\n\n      allImages.sort((a, b) => a.getWidth() - b.getWidth());\n      for (let i = 0; i < allImages.length; ++i) {\n        const image = allImages[i];\n        const imgResX = (imgBBox[2] - imgBBox[0]) / image.getWidth();\n        const imgResY = (imgBBox[3] - imgBBox[1]) / image.getHeight();\n\n        usedImage = image;\n        if ((resX && resX > imgResX) || (resY && resY > imgResY)) {\n          break;\n        }\n      }\n    }\n\n    let wnd = imageWindow;\n    if (bbox) {\n      const [oX, oY] = firstImage.getOrigin();\n      const [imageResX, imageResY] = usedImage.getResolution(firstImage);\n\n      wnd = [\n        Math.round((bbox[0] - oX) / imageResX),\n        Math.round((bbox[1] - oY) / imageResY),\n        Math.round((bbox[2] - oX) / imageResX),\n        Math.round((bbox[3] - oY) / imageResY),\n      ];\n      wnd = [\n        Math.min(wnd[0], wnd[2]),\n        Math.min(wnd[1], wnd[3]),\n        Math.max(wnd[0], wnd[2]),\n        Math.max(wnd[1], wnd[3]),\n      ];\n    }\n\n    return usedImage.readRasters({ ...options, window: wnd });\n  }\n}\n\n/**\n * The abstraction for a whole GeoTIFF file.\n * @augments GeoTIFFBase\n */\nclass GeoTIFF extends GeoTIFFBase {\n  /**\n   * @constructor\n   * @param {Source} source The datasource to read from.\n   * @param {Boolean} littleEndian Whether the image uses little endian.\n   * @param {Boolean} bigTiff Whether the image uses bigTIFF conventions.\n   * @param {Number} firstIFDOffset The numeric byte-offset from the start of the image\n   *                                to the first IFD.\n   * @param {Object} [options] further options.\n   * @param {Boolean} [options.cache=false] whether or not decoded tiles shall be cached.\n   */\n  constructor(source, littleEndian, bigTiff, firstIFDOffset, options = {}) {\n    super();\n    this.source = source;\n    this.littleEndian = littleEndian;\n    this.bigTiff = bigTiff;\n    this.firstIFDOffset = firstIFDOffset;\n    this.cache = options.cache || false;\n    this.ifdRequests = [];\n    this.ghostValues = null;\n  }\n\n  async getSlice(offset, size) {\n    const fallbackSize = this.bigTiff ? 4048 : 1024;\n    return new DataSlice(\n      (await this.source.fetch([{\n        offset,\n        length: typeof size !== 'undefined' ? size : fallbackSize,\n      }]))[0],\n      offset,\n      this.littleEndian,\n      this.bigTiff,\n    );\n  }\n\n  /**\n   * Instructs to parse an image file directory at the given file offset.\n   * As there is no way to ensure that a location is indeed the start of an IFD,\n   * this function must be called with caution (e.g only using the IFD offsets from\n   * the headers or other IFDs).\n   * @param {number} offset the offset to parse the IFD at\n   * @returns {ImageFileDirectory} the parsed IFD\n   */\n  async parseFileDirectoryAt(offset) {\n    const entrySize = this.bigTiff ? 20 : 12;\n    const offsetSize = this.bigTiff ? 8 : 2;\n\n    let dataSlice = await this.getSlice(offset);\n    const numDirEntries = this.bigTiff\n      ? dataSlice.readUint64(offset)\n      : dataSlice.readUint16(offset);\n\n    // if the slice does not cover the whole IFD, request a bigger slice, where the\n    // whole IFD fits: num of entries + n x tag length + offset to next IFD\n    const byteSize = (numDirEntries * entrySize) + (this.bigTiff ? 16 : 6);\n    if (!dataSlice.covers(offset, byteSize)) {\n      dataSlice = await this.getSlice(offset, byteSize);\n    }\n\n    const fileDirectory = {};\n\n    // loop over the IFD and create a file directory object\n    let i = offset + (this.bigTiff ? 8 : 2);\n    for (let entryCount = 0; entryCount < numDirEntries; i += entrySize, ++entryCount) {\n      const fieldTag = dataSlice.readUint16(i);\n      const fieldType = dataSlice.readUint16(i + 2);\n      const typeCount = this.bigTiff\n        ? dataSlice.readUint64(i + 4)\n        : dataSlice.readUint32(i + 4);\n\n      let fieldValues;\n      let value;\n      const fieldTypeLength = getFieldTypeLength(fieldType);\n      const valueOffset = i + (this.bigTiff ? 12 : 8);\n\n      // check whether the value is directly encoded in the tag or refers to a\n      // different external byte range\n      if (fieldTypeLength * typeCount <= (this.bigTiff ? 8 : 4)) {\n        fieldValues = getValues(dataSlice, fieldType, typeCount, valueOffset);\n      } else {\n        // resolve the reference to the actual byte range\n        const actualOffset = dataSlice.readOffset(valueOffset);\n        const length = getFieldTypeLength(fieldType) * typeCount;\n\n        // check, whether we actually cover the referenced byte range; if not,\n        // request a new slice of bytes to read from it\n        if (dataSlice.covers(actualOffset, length)) {\n          fieldValues = getValues(dataSlice, fieldType, typeCount, actualOffset);\n        } else {\n          const fieldDataSlice = await this.getSlice(actualOffset, length);\n          fieldValues = getValues(fieldDataSlice, fieldType, typeCount, actualOffset);\n        }\n      }\n\n      // unpack single values from the array\n      if (typeCount === 1 && arrayFields.indexOf(fieldTag) === -1\n        && !(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n        value = fieldValues[0];\n      } else {\n        value = fieldValues;\n      }\n\n      // write the tags value to the file directly\n      fileDirectory[fieldTagNames[fieldTag]] = value;\n    }\n    const geoKeyDirectory = parseGeoKeyDirectory(fileDirectory);\n    const nextIFDByteOffset = dataSlice.readOffset(\n      offset + offsetSize + (entrySize * numDirEntries),\n    );\n\n    return new ImageFileDirectory(\n      fileDirectory,\n      geoKeyDirectory,\n      nextIFDByteOffset,\n    );\n  }\n\n  async requestIFD(index) {\n    // see if we already have that IFD index requested.\n    if (this.ifdRequests[index]) {\n      // attach to an already requested IFD\n      return this.ifdRequests[index];\n    } else if (index === 0) {\n      // special case for index 0\n      this.ifdRequests[index] = this.parseFileDirectoryAt(this.firstIFDOffset);\n      return this.ifdRequests[index];\n    } else if (!this.ifdRequests[index - 1]) {\n      // if the previous IFD was not yet loaded, load that one first\n      // this is the recursive call.\n      try {\n        this.ifdRequests[index - 1] = this.requestIFD(index - 1);\n      } catch (e) {\n        // if the previous one already was an index error, rethrow\n        // with the current index\n        if (e instanceof GeoTIFFImageIndexError) {\n          throw new GeoTIFFImageIndexError(index);\n        }\n        // rethrow anything else\n        throw e;\n      }\n    }\n    // if the previous IFD was loaded, we can finally fetch the one we are interested in.\n    // we need to wrap this in an IIFE, otherwise this.ifdRequests[index] would be delayed\n    this.ifdRequests[index] = (async () => {\n      const previousIfd = await this.ifdRequests[index - 1];\n      if (previousIfd.nextIFDByteOffset === 0) {\n        throw new GeoTIFFImageIndexError(index);\n      }\n      return this.parseFileDirectoryAt(previousIfd.nextIFDByteOffset);\n    })();\n    return this.ifdRequests[index];\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {Number} [index=0] the index of the image to return.\n   * @returns {GeoTIFFImage} the image at the given index\n   */\n  async getImage(index = 0) {\n    const ifd = await this.requestIFD(index);\n    return new GeoTIFFImage(\n      ifd.fileDirectory, ifd.geoKeyDirectory,\n      this.dataView, this.littleEndian, this.cache, this.source,\n    );\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Number} the number of internal subfile images\n   */\n  async getImageCount() {\n    let index = 0;\n    // loop until we run out of IFDs\n    let hasNext = true;\n    while (hasNext) {\n      try {\n        await this.requestIFD(index);\n        ++index;\n      } catch (e) {\n        if (e instanceof GeoTIFFImageIndexError) {\n          hasNext = false;\n        } else {\n          throw e;\n        }\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Get the values of the COG ghost area as a parsed map.\n   * See https://gdal.org/drivers/raster/cog.html#header-ghost-area for reference\n   * @returns {Object} the parsed ghost area or null, if no such area was found\n   */\n  async getGhostValues() {\n    const offset = this.bigTiff ? 16 : 8;\n    if (this.ghostValues) {\n      return this.ghostValues;\n    }\n    const detectionString = 'GDAL_STRUCTURAL_METADATA_SIZE=';\n    const heuristicAreaSize = detectionString.length + 100;\n    let slice = await this.getSlice(offset, heuristicAreaSize);\n    if (detectionString === getValues(slice, fieldTypes.ASCII, detectionString.length, offset)) {\n      const valuesString = getValues(slice, fieldTypes.ASCII, heuristicAreaSize, offset);\n      const firstLine = valuesString.split('\\n')[0];\n      const metadataSize = Number(firstLine.split('=')[1].split(' ')[0]) + firstLine.length;\n      if (metadataSize > heuristicAreaSize) {\n        slice = await this.getSlice(offset, metadataSize);\n      }\n      const fullString = getValues(slice, fieldTypes.ASCII, metadataSize, offset);\n      this.ghostValues = {};\n      fullString\n        .split('\\n')\n        .filter((line) => line.length > 0)\n        .map((line) => line.split('='))\n        .forEach(([key, value]) => {\n          this.ghostValues[key] = value;\n        });\n    }\n    return this.ghostValues;\n  }\n\n  /**\n   * Parse a (Geo)TIFF file from the given source.\n   *\n   * @param {source~Source} source The source of data to parse from.\n   * @param {object} options Additional options.\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   */\n  static async fromSource(source, options, signal) {\n    const headerData = (await source.fetch([{ offset: 0, length: 1024 }], signal))[0];\n    const dataView = new DataView64(headerData);\n\n    const BOM = dataView.getUint16(0, 0);\n    let littleEndian;\n    if (BOM === 0x4949) {\n      littleEndian = true;\n    } else if (BOM === 0x4D4D) {\n      littleEndian = false;\n    } else {\n      throw new TypeError('Invalid byte order value.');\n    }\n\n    const magicNumber = dataView.getUint16(2, littleEndian);\n    let bigTiff;\n    if (magicNumber === 42) {\n      bigTiff = false;\n    } else if (magicNumber === 43) {\n      bigTiff = true;\n      const offsetByteSize = dataView.getUint16(4, littleEndian);\n      if (offsetByteSize !== 8) {\n        throw new Error('Unsupported offset byte-size.');\n      }\n    } else {\n      throw new TypeError('Invalid magic number.');\n    }\n\n    const firstIFDOffset = bigTiff\n      ? dataView.getUint64(8, littleEndian)\n      : dataView.getUint32(4, littleEndian);\n    return new GeoTIFF(source, littleEndian, bigTiff, firstIFDOffset, options);\n  }\n\n  /**\n   * Closes the underlying file buffer\n   * N.B. After the GeoTIFF has been completely processed it needs\n   * to be closed but only if it has been constructed from a file.\n   */\n  close() {\n    if (typeof this.source.close === 'function') {\n      return this.source.close();\n    }\n    return false;\n  }\n}\n\nexport { GeoTIFF };\nexport default GeoTIFF;\n\n/**\n * Wrapper for GeoTIFF files that have external overviews.\n * @augments GeoTIFFBase\n */\nclass MultiGeoTIFF extends GeoTIFFBase {\n  /**\n   * Construct a new MultiGeoTIFF from a main and several overview files.\n   * @param {GeoTIFF} mainFile The main GeoTIFF file.\n   * @param {GeoTIFF[]} overviewFiles An array of overview files.\n   */\n  constructor(mainFile, overviewFiles) {\n    super();\n    this.mainFile = mainFile;\n    this.overviewFiles = overviewFiles;\n    this.imageFiles = [mainFile].concat(overviewFiles);\n\n    this.fileDirectoriesPerFile = null;\n    this.fileDirectoriesPerFileParsing = null;\n    this.imageCount = null;\n  }\n\n  async parseFileDirectoriesPerFile() {\n    const requests = [this.mainFile.parseFileDirectoryAt(this.mainFile.firstIFDOffset)]\n      .concat(this.overviewFiles.map((file) => file.parseFileDirectoryAt(file.firstIFDOffset)));\n\n    this.fileDirectoriesPerFile = await Promise.all(requests);\n    return this.fileDirectoriesPerFile;\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {Number} [index=0] the index of the image to return.\n   * @returns {GeoTIFFImage} the image at the given index\n   */\n  async getImage(index = 0) {\n    await this.getImageCount();\n    await this.parseFileDirectoriesPerFile();\n    let visited = 0;\n    let relativeIndex = 0;\n    for (let i = 0; i < this.imageFiles.length; i++) {\n      const imageFile = this.imageFiles[i];\n      for (let ii = 0; ii < this.imageCounts[i]; ii++) {\n        if (index === visited) {\n          const ifd = await imageFile.requestIFD(relativeIndex);\n          return new GeoTIFFImage(\n            ifd.fileDirectory, ifd.geoKeyDirectory,\n            imageFile.dataView, imageFile.littleEndian, imageFile.cache, imageFile.source,\n          );\n        }\n        visited++;\n        relativeIndex++;\n      }\n      relativeIndex = 0;\n    }\n\n    throw new RangeError('Invalid image index');\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Number} the number of internal subfile images\n   */\n  async getImageCount() {\n    if (this.imageCount !== null) {\n      return this.imageCount;\n    }\n    const requests = [this.mainFile.getImageCount()]\n      .concat(this.overviewFiles.map((file) => file.getImageCount()));\n    this.imageCounts = await Promise.all(requests);\n    this.imageCount = this.imageCounts.reduce((count, ifds) => count + ifds, 0);\n    return this.imageCount;\n  }\n}\n\nexport { MultiGeoTIFF };\n\n/**\n * Creates a new GeoTIFF from a remote URL.\n * @param {string} url The URL to access the image from\n * @param {object} [options] Additional options to pass to the source.\n *                           See {@link makeRemoteSource} for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise.<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromUrl(url, options = {}, signal) {\n  return GeoTIFF.fromSource(makeRemoteSource(url, options), signal);\n}\n\n/**\n * Construct a new GeoTIFF from an\n * [ArrayBuffer]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer}.\n * @param {ArrayBuffer} arrayBuffer The data to read the file from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise.<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromArrayBuffer(arrayBuffer, signal) {\n  return GeoTIFF.fromSource(makeBufferSource(arrayBuffer), signal);\n}\n\n/**\n * Construct a GeoTIFF from a local file path. This uses the node\n * [filesystem API]{@link https://nodejs.org/api/fs.html} and is\n * not available on browsers.\n *\n * N.B. After the GeoTIFF has been completely processed it needs\n * to be closed but only if it has been constructed from a file.\n * @param {string} path The file path to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise.<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromFile(path, signal) {\n  return GeoTIFF.fromSource(makeFileSource(path), signal);\n}\n\n/**\n * Construct a GeoTIFF from an HTML\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob} or\n * [File]{@link https://developer.mozilla.org/en-US/docs/Web/API/File}\n * object.\n * @param {Blob|File} blob The Blob or File object to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise.<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromBlob(blob, signal) {\n  return GeoTIFF.fromSource(makeFileReaderSource(blob), signal);\n}\n\n/**\n * Construct a MultiGeoTIFF from the given URLs.\n * @param {string} mainUrl The URL for the main file.\n * @param {string[]} overviewUrls An array of URLs for the overview images.\n * @param {object} [options] Additional options to pass to the source.\n *                           See [makeRemoteSource]{@link module:source.makeRemoteSource}\n *                           for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise.<MultiGeoTIFF>} The resulting MultiGeoTIFF file.\n */\nexport async function fromUrls(mainUrl, overviewUrls = [], options = {}, signal) {\n  const mainFile = await GeoTIFF.fromSource(makeRemoteSource(mainUrl, options), signal);\n  const overviewFiles = await Promise.all(\n    overviewUrls.map((url) => GeoTIFF.fromSource(makeRemoteSource(url, options))),\n  );\n\n  return new MultiGeoTIFF(mainFile, overviewFiles);\n}\n\n/**\n * Main creating function for GeoTIFF files.\n * @param {(Array)} array of pixel values\n * @returns {metadata} metadata\n */\nexport async function writeArrayBuffer(values, metadata) {\n  return writeGeotiff(values, metadata);\n}\n\nexport { Pool };\n","export function fromWhiteIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = 256 - (raster[i] / max * 256);\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromBlackIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = raster[i] / max * 256;\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromPalette(raster, colorMap) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  const greenOffset = colorMap.length / 3;\n  const blueOffset = colorMap.length / 3 * 2;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    const mapIndex = raster[i];\n    rgbRaster[j] = colorMap[mapIndex] / 65536 * 256;\n    rgbRaster[j + 1] = colorMap[mapIndex + greenOffset] / 65536 * 256;\n    rgbRaster[j + 2] = colorMap[mapIndex + blueOffset] / 65536 * 256;\n  }\n  return rgbRaster;\n}\n\nexport function fromCMYK(cmykRaster) {\n  const { width, height } = cmykRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  for (let i = 0, j = 0; i < cmykRaster.length; i += 4, j += 3) {\n    const c = cmykRaster[i];\n    const m = cmykRaster[i + 1];\n    const y = cmykRaster[i + 2];\n    const k = cmykRaster[i + 3];\n\n    rgbRaster[j] = 255 * ((255 - c) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 1] = 255 * ((255 - m) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 2] = 255 * ((255 - y) / 256) * ((255 - k) / 256);\n  }\n  return rgbRaster;\n}\n\nexport function fromYCbCr(yCbCrRaster) {\n  const { width, height } = yCbCrRaster;\n  const rgbRaster = new Uint8ClampedArray(width * height * 3);\n  for (let i = 0, j = 0; i < yCbCrRaster.length; i += 3, j += 3) {\n    const y = yCbCrRaster[i];\n    const cb = yCbCrRaster[i + 1];\n    const cr = yCbCrRaster[i + 2];\n\n    rgbRaster[j] = (y + (1.40200 * (cr - 0x80)));\n    rgbRaster[j + 1] = (y - (0.34414 * (cb - 0x80)) - (0.71414 * (cr - 0x80)));\n    rgbRaster[j + 2] = (y + (1.77200 * (cb - 0x80)));\n  }\n  return rgbRaster;\n}\n\nconst Xn = 0.95047;\nconst Yn = 1.00000;\nconst Zn = 1.08883;\n\n// from https://github.com/antimatter15/rgb-lab/blob/master/color.js\n\nexport function fromCIELab(cieLabRaster) {\n  const { width, height } = cieLabRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n\n  for (let i = 0, j = 0; i < cieLabRaster.length; i += 3, j += 3) {\n    const L = cieLabRaster[i + 0];\n    const a_ = cieLabRaster[i + 1] << 24 >> 24; // conversion from uint8 to int8\n    const b_ = cieLabRaster[i + 2] << 24 >> 24; // same\n\n    let y = (L + 16) / 116;\n    let x = (a_ / 500) + y;\n    let z = y - (b_ / 200);\n    let r;\n    let g;\n    let b;\n\n    x = Xn * ((x * x * x > 0.008856) ? x * x * x : (x - (16 / 116)) / 7.787);\n    y = Yn * ((y * y * y > 0.008856) ? y * y * y : (y - (16 / 116)) / 7.787);\n    z = Zn * ((z * z * z > 0.008856) ? z * z * z : (z - (16 / 116)) / 7.787);\n\n    r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n    g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n    b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n    r = (r > 0.0031308) ? ((1.055 * (r ** (1 / 2.4))) - 0.055) : 12.92 * r;\n    g = (g > 0.0031308) ? ((1.055 * (g ** (1 / 2.4))) - 0.055) : 12.92 * g;\n    b = (b > 0.0031308) ? ((1.055 * (b ** (1 / 2.4))) - 0.055) : 12.92 * b;\n\n    rgbRaster[j] = Math.max(0, Math.min(1, r)) * 255;\n    rgbRaster[j + 1] = Math.max(0, Math.min(1, g)) * 255;\n    rgbRaster[j + 2] = Math.max(0, Math.min(1, b)) * 255;\n  }\n  return rgbRaster;\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n}","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import { withLeaflet, MapLayer } from 'react-leaflet';\n\nimport { ImageOverlay, Util, DomUtil, latLngBounds, Bounds } from 'leaflet';\nimport * as GeoTIFF from 'geotiff';\nimport chroma from 'chroma-js';\nimport proj4 from 'proj4';\n\n/**\n * GeoTIFF overlay using canvas instead of an image. Only supports WGS 84\n * (also known as WGS 1984, EPSG:4326) GeoTIFFs, ie. no reprojection is done.\n */\n\nconst LeafletGeotiff = ImageOverlay.extend({\n\toptions: {\n        colorscale: 'Viridis',\n        domainMin: 0,\n        domainMax: 1,\n        clampLow: false,\n        clampHigh: false,\n        classes: null,\n\t\tband: 0,\n        image: 0,\n        clip: null,\n        style: {},\n        className: null,\n        nCanvas: 10\n    },\n    _initImage: function() {\n        const image = DomUtil.create('div');\n        this._image = image;\n        this._raster = {};\n        this._canvasses = [];\n\n        for (let i=0; i<this.options.nCanvas; i++) {\n            const canvas = DomUtil.create('canvas', '', image);\n            canvas.style.position = 'absolute';\n            canvas.style['image-rendering'] = 'pixelated';\n            this._canvasses.push(canvas);\n        }\n\n        // Add some classes used by leaflet to the canvas.\n        DomUtil.addClass(image, 'leaflet-image-layer');\n        if (this._zoomAnimated) { DomUtil.addClass(image, 'leaflet-zoom-animated'); }\n        if (this.options.className) { DomUtil.addClass(image, this.options.className); }\n\n        // Set style attributes to the DOM object if any are given.\n        for (const prop in this.options.style) {\n            image.style[prop] = this.options.style[prop];\n        }\n\n        // Override some listeners. Required by leaflet.\n        image.onselectstart = Util.falseFn;\n        image.onmousemove = Util.falseFn;\n    },\n    initialize: function (url, options) {\n\t\tthis._url = url;\n\n\t\tUtil.setOptions(this, options);\n\n        this._setScale();\n\t},\n    setURL: function(url) {\n        this._url = url;\n\n        this._getData();\n\n        if (!this._url) {\n            // Recalculate the bounds in case the _url is set to None after it was valid\n            const bounds = new Bounds(this._map.latLngToLayerPoint(this._bounds.getNorthWest()),\n                                      this._map.latLngToLayerPoint(this._bounds.getSouthEast()));\n            const size = bounds.getSize();\n\n            // Set the canvas position to the pixel coordinates calculated above.\n            DomUtil.setPosition(this._image, bounds.min);\n\n            // Set the DOM size of the canvas to the pixel size calculated above.\n            this._image.style.width  = size.x + 'px';\n            this._image.style.height = size.y + 'px';\n        }\n    },\n    setBand: function (band) {\n        this.options.band = band;\n        this._getData();\n    },\n    setClip: function (clip) {\n        this.options.clip = clip;\n        this._drawImage();\n    },\n    setOpacity: function (opacity) {\n        this.options.opacity = opacity;\n        this._drawImage();\n    },\n    setColorscale: function (colorscale) {\n        this.options.colorscale = colorscale;\n        this._setScale();\n        this._drawImage();\n    },\n    setDomainMin: function (domainMin) {\n        this.options.domainMin = domainMin;\n        this._setScale();\n        this._drawImage();\n    },\n    setDomainMax: function (domainMax) {\n        this.options.domainMax = domainMax;\n        this._setScale();\n        this._drawImage();\n    },\n    setClampLow: function (clampLow) {\n        this.options.clampLow = clampLow;\n        this._drawImage();\n    },\n    setClampHigh: function (clampHigh) {\n        this.options.clampHigh = clampHigh;\n        this._drawImage();\n    },\n    setClasses: function (classes) {\n        this.options.classes = classes;\n        this._setScale();\n        this._drawImage();\n    },\n    setStyle: function (style) {\n        this.options.style = style;\n        this._image.style = null;\n        for (const prop in this.options.style) {\n            this._image.style[prop] = this.options.style[prop];\n        }\n        this._reset();\n    },\n    setClassName: function (oldClass, newClass) {\n        this.options.className = newClass;\n        if (oldClass !== undefined && oldClass !== null && oldClass !== \"\") {\n            for (const c of oldClass.split(' ')) {\n                DomUtil.removeClass(this._image, c);\n            }\n        }\n        if (newClass !== undefined && newClass !== null && newClass !== \"\") {\n            for (const c of newClass.split(' ')) {\n                DomUtil.addClass(this._image, c);\n            }\n        }\n        this._reset();\n    },\n    isClockwise: function (poly) {\n        let sum = 0;\n        for (let i=1; i<poly.length; i++) {\n            sum += (poly[i][0] - poly[i-1][0]) * (poly[i][1] + poly[i-1][1]);\n        }\n        sum += (poly[0][0] - poly[poly.length-1][0]) * (poly[0][1] + poly[poly.length-1][1]);\n\n        return sum < 0;\n    },\n    getIndexForLatLng: function (lat, lng) {\n        const xmin = this._raster.originX;\n        const xmax = xmin + this._raster.width * this._raster.pixelWidth;\n        const ymax = this._raster.originY;\n        const ymin = ymax - this._raster.height * this._raster.pixelHeight;\n\n        if (lat < ymin || lat > ymax || lng < xmin || lng > xmax) return null\n\n        const yd = (ymax - lat)/this._raster.pixelHeight;\n        const xd = (lng - xmin)/this._raster.pixelWidth;\n\n        const i = Math.floor(yd) * this._raster.width + Math.floor(xd);\n        if (i >= 0 && i < this._raster.data.length) {\n            return i;\n        }\n        return null\n    },\n    getValueAtLatLng: function (lat, lng) {\n        const i = this.getIndexForLatLng(lat, lng);\n        if (i === null){\n            return null\n        }\n        return this._raster.data[i];\n    },\n    _setScale: function() {\n        if (this.options.classes !== null) {\n            this._scale = chroma.scale(this.options.colorscale)\n                                .domain([this.options.domainMin, this.options.domainMax])\n                                .classes(this.options.classes);\n        } else {\n            this._scale = chroma.scale(this.options.colorscale)\n                                .domain([this.options.domainMin, this.options.domainMax]);\n        }\n    },\n    _reset: function () {\n        if (!this._raster.data) {\n            this._getData();\n        } else {\n            // Calculate the bounds from the information supplied by the GeoTIFF.\n            const bounds = new Bounds(this._map.latLngToLayerPoint(this._bounds.getNorthWest()),\n                                      this._map.latLngToLayerPoint(this._bounds.getSouthEast()));\n            const size = bounds.getSize();\n\n            // Set the canvas position to the pixel coordinates calculated above.\n            DomUtil.setPosition(this._image, bounds.min);\n\n            // Set the DOM size of the canvas to the pixel size calculated above.\n            this._image.style.width  = size.x + 'px';\n            this._image.style.height = size.y + 'px';\n        }\n    },\n    _getData: function() {\n        // Reset this._raster and _bounds\n        this._raster = {};\n        this._bounds = latLngBounds([[-99999, -99999], [-99999, -99999]]);\n\n        if (!this._url) return;\n\n        fetch(this._url)\n        .then(response => response.arrayBuffer())\n        .then(buffer => GeoTIFF.fromArrayBuffer(buffer))\n        .then(tiff => {\n            this.tiff = tiff;\n            return this.tiff.getImage(this.options.image);\n        }).then(image => {\n\n            const height = image.getHeight();\n            const width = image.getWidth();\n\n            this._raster.width = width;\n            this._raster.height = height;\n\n            // Get the meta data stored in the image.\n            const meta = image.getFileDirectory();\n            if (meta.GDAL_NODATA) {\n                this._raster.noData = parseFloat(meta.GDAL_NODATA);\n            }\n\n            const {\n                GeographicTypeGeoKey,\n                ProjectedCSTypeGeoKey,\n              } = image.getGeoKeys();\n\n            const projection = GeographicTypeGeoKey || ProjectedCSTypeGeoKey;\n            if (projection !== 4326) console.log(`Unsupported projection: ${projection}`);\n\n            const [resolutionX, resolutionY] = image.getResolution();\n            const pixelHeight = Math.abs(resolutionY);\n            const pixelWidth = Math.abs(resolutionX);\n\n            this._raster.pixelHeight = pixelHeight;\n            this._raster.pixelWidth = pixelWidth;\n\n            const [originX, originY] = image.getOrigin();\n\n            this._raster.originX = originX;\n            this._raster.originY = originY;\n\n            const xmin = originX;\n            const xmax = xmin + width * pixelWidth;\n            const ymax = originY;\n            const ymin = ymax - height * pixelHeight;\n\n            // This sets the bounds for ImageOverlay which makes transforms, zoom, etc. work\n            this._bounds = latLngBounds([[ymin, xmin], [ymax, xmax]]);\n\n            const bounds = new Bounds(this._map.latLngToLayerPoint(this._bounds.getNorthWest()),\n                                      this._map.latLngToLayerPoint(this._bounds.getSouthEast()));\n            const size = bounds.getSize();\n\n            // Set the (real) pixel sizes of the canvasses\n            let yOffset = 0;\n            let yPctOffset = 0;\n            for (let i=0; i<this.options.nCanvas; i++) {\n                this._canvasses[i].width = this._raster.width;\n                this._canvasses[i].style.width = \"100%\";\n\n                const yHeight = Math.ceil(this._raster.height/this.options.nCanvas);\n                this._canvasses[i].height = i == this.options.nCanvas - 1 ? this._raster.height - yOffset : yHeight;\n\n                const y1 = ymax - yOffset * pixelHeight;\n                const y0 = ymax - (yOffset + this._canvasses[i].height) * pixelHeight;\n\n                const yminp = proj4('EPSG:3857', [xmin, ymin]);\n                const ymaxp = proj4('EPSG:3857', [xmin, ymax]);\n                const y0p = proj4('EPSG:3857', [xmin, y0]);\n                const y1p = proj4('EPSG:3857', [xmin, y1]);\n\n                const yPct = (y1p[1] - y0p[1])/(ymaxp[1] - yminp[1]);\n                this._canvasses[i].style.height = `${100*yPct}%`;\n                this._canvasses[i].style.top = `${100*yPctOffset}%`;\n\n                yOffset += yHeight;\n                yPctOffset += yPct;\n            }\n\n            // Set the canvas position to the pixel coordinates calculated above.\n            DomUtil.setPosition(this._image, bounds.min);\n\n            // Set the (DOM) size of the canvas to the pixel size calculated above.\n            this._image.style.width  = size.x + 'px';\n            this._image.style.height = size.y + 'px';\n\n            // Use these if you need to look at the information in the GeoTIFF\n            // console.log(image);\n            // console.log(meta);\n            image.readRasters().then(rst => {\n                this._raster.data = rst[this.options.band];\n                this.fire('load');\n                this._drawImage();\n            })\n        })\n    },\n    _drawImage: function () {\n        // We need to check if the data has been loaded, because drawImage may be\n        // triggered early by the set* methods\n        if (this._raster.data) {\n            let yOffset = 0;\n            for (let k=0; k<this.options.nCanvas; k++) {\n                const ctx = this._canvasses[k].getContext(\"2d\");\n                const yHeight = this._canvasses[k].height;\n//                console.log(yOffset, yHeight, this._raster.height);\n\n                // We draw the image on a separate image data buffer and then copy it\n                // onto the canvas in the end.\n                const id = ctx.createImageData(this._raster.width, yHeight);\n\n                for (let j=0; j<yHeight; j++) {\n                    for (let i=0; i<this._raster.width; i++) {\n                        const rIdx = (j+yOffset)*this._raster.width + i;\n                        let val = this._raster.data[rIdx];\n\n                        // Clamp the value if enabled\n                        if (val < this.options.domainMin && this.options.clampLow) {\n                            val = this.options.domainMin;\n                        }\n                        if (val > this.options.domainMax && this.options.clampHigh) {\n                            val = this.options.domainMax;\n                        }\n\n                        // Calculate the color using the colorscale\n                        let color;\n                        if (val === this._raster.noData) {\n                            color = this._scale(null);\n                        } else {\n                            color = this._scale(val);\n                        }\n\n                        // Draw the color if within the domain\n                        if (val >= this.options.domainMin && val <= this.options.domainMax) {\n                            const idx = 4*(j*this._raster.width + i);\n                            id.data[idx] = color.get('rgba.r');\n                            id.data[idx+1] = color.get('rgba.g');\n                            id.data[idx+2] = color.get('rgba.b');\n                            id.data[idx+3] = this.options.opacity*color.get('rgba.a')*255;\n                        }\n                    }\n                }\n\n                // Copy final image to the canvas\n                ctx.clearRect(0, 0, this._raster.width, yHeight);\n                ctx.putImageData(id, 0, 0);\n\n\n                if (this.options.clip) {\n                    const xmin = this._raster.originX;\n                    const ymax = this._raster.originY;\n\n                    ctx.globalCompositeOperation = 'destination-out';\n\n                    // Draw a path around the border of the image.\n                    ctx.beginPath();\n                    ctx.moveTo(0, -yOffset);\n                    ctx.lineTo(this._raster.width, -yOffset);\n                    ctx.lineTo(this._raster.width, this._raster.height - yOffset);\n                    ctx.lineTo(0, this._raster.height - yOffset);\n                    ctx.closePath();\n\n                    // If there are clipping polygons, then this section removes whatever\n                    // is outside the polygons on the canvas.\n                    let moved = false;\n                    for (let i=0; i<this.options.clip.length; i++) {\n                        const clipCW = this.isClockwise(this.options.clip[i]);\n                        // Then draw a path along the polygon\n                        if (clipCW) {\n                            // Clockwise\n                            for (let j = this.options.clip[i].length - 1; j >= 0; j--) {\n                                const [lat, lng] = this.options.clip[i][j];\n                                const y = (ymax - lat) / this._raster.pixelHeight;\n                                const x = (lng - xmin) / this._raster.pixelWidth;\n\n                                if (moved) {\n                                    ctx.lineTo(x, y - yOffset);\n                                } else {\n                                    ctx.moveTo(x, y - yOffset);\n                                    moved = true;\n                                }\n                            }\n                        } else {\n                            // Counter clockwise\n                            for (let j = 0; j < this.options.clip.length; j++) {\n                                const [lat, lng] = this.options.clip[i][j];\n                                const y = (ymax - lat) / this._raster.pixelHeight;\n                                const x = (lng - xmin) / this._raster.pixelWidth;\n\n                                if (moved) {\n                                    ctx.lineTo(x, y - yOffset);\n                                } else {\n                                    ctx.moveTo(x, y - yOffset);\n                                    moved = true;\n                                }\n                            }\n                        }\n                        ctx.closePath();\n                    }\n                    // This then cuts out the polygon and removes everything outside it\n                    ctx.fill();\n                }\n\n                // Add canvas height to yOffset\n                yOffset += yHeight;\n            }\n        }\n    }\n});\n\nclass LeafletGeoTIFFOverlay extends MapLayer {\n    createLeafletElement(props) {\n        const nProps = Object.assign({}, props);\n\n        const el = new LeafletGeotiff(\n            nProps.url,\n            this.getOptions(nProps)\n        )\n        this.contextValue = Object.assign({}, props.leaflet);\n        this.contextValue.popupContainer = el;\n\n        return el\n    }\n\n    updateLeafletElement(fromProps, toProps) {\n        if (toProps.url !== fromProps.url) {\n            this.leafletElement.setURL(toProps.url);\n        }\n        if (toProps.band !== fromProps.band) {\n            this.leafletElement.setBand(toProps.band);\n        }\n        if (toProps.clip !== fromProps.clip) {\n            this.leafletElement.setClip(toProps.clip);\n        }\n        if (toProps.opacity !== fromProps.opacity) {\n            this.leafletElement.setOpacity(toProps.opacity);\n        }\n        if (toProps.colorscale !== fromProps.colorscale) {\n            this.leafletElement.setColorscale(toProps.colorscale);\n        }\n        if (toProps.domainMin !== fromProps.domainMin) {\n            this.leafletElement.setDomainMin(toProps.domainMin);\n        }\n        if (toProps.domainMax !== fromProps.domainMax) {\n            this.leafletElement.setDomainMax(toProps.domainMax);\n        }\n        if (toProps.clampLow !== fromProps.clampLow) {\n            this.leafletElement.setClampLow(toProps.clampLow);\n        }\n        if (toProps.clampHigh !== fromProps.clampHigh) {\n            this.leafletElement.setClampHigh(toProps.clampHigh);\n        }\n        if (toProps.classes !== fromProps.classes) {\n            this.leafletElement.setClasses(toProps.classes);\n        }\n        if (toProps.style !== fromProps.style) {\n            this.leafletElement.setStyle(toProps.style);\n        }\n        if (toProps.className !== fromProps.className) {\n            this.leafletElement.setClassName(fromProps.className, toProps.className);\n        }\n    }\n}\n\nexport default withLeaflet(LeafletGeoTIFFOverlay)\n","import React, {Component} from 'react';\nimport {propTypes} from '../components/GeoTIFFOverlay.react';\nimport LeafletGeoTIFFOverlay from '../LeafletGeoTIFFOverlay';\n\n/**\n * GeoTIFFOverlay is just wrapper of LeafletGeoTIFFOverlay.\n */\nexport default class GeoTIFFOverlay extends Component {\n    render() {\n        const nProps = Object.assign({}, this.props);\n        // Bind events.\n        nProps.onclick = (e) => {\n            const idx = e.target.getIndexForLatLng(e.latlng.lat, e.latlng.lng);\n            const val = e.target.getValueAtLatLng(e.latlng.lat, e.latlng.lng);\n            nProps.setProps({ click_lat_lng_val: [e.latlng.lat, e.latlng.lng, val] });\n            nProps.setProps({ click_lat_lng_idx: [e.latlng.lat, e.latlng.lng, idx] });\n        };\n        nProps.ondblclick = (e) => {\n            const idx = e.target.getIndexForLatLng(e.latlng.lat, e.latlng.lng);\n            const val = e.target.getValueAtLatLng(e.latlng.lat, e.latlng.lng);\n            nProps.setProps({ dbl_click_lat_lng_val: [e.latlng.lat, e.latlng.lng, val] });\n            nProps.setProps({ dbl_click_lat_lng_idx: [e.latlng.lat, e.latlng.lng, idx] });\n        };\n        // Render the leaflet component.\n        return <LeafletGeoTIFFOverlay {...nProps} />\n    }\n}\n\nGeoTIFFOverlay.propTypes = propTypes;","export const fieldTagNames = {\n  // TIFF Baseline\n  0x013B: 'Artist',\n  0x0102: 'BitsPerSample',\n  0x0109: 'CellLength',\n  0x0108: 'CellWidth',\n  0x0140: 'ColorMap',\n  0x0103: 'Compression',\n  0x8298: 'Copyright',\n  0x0132: 'DateTime',\n  0x0152: 'ExtraSamples',\n  0x010A: 'FillOrder',\n  0x0121: 'FreeByteCounts',\n  0x0120: 'FreeOffsets',\n  0x0123: 'GrayResponseCurve',\n  0x0122: 'GrayResponseUnit',\n  0x013C: 'HostComputer',\n  0x010E: 'ImageDescription',\n  0x0101: 'ImageLength',\n  0x0100: 'ImageWidth',\n  0x010F: 'Make',\n  0x0119: 'MaxSampleValue',\n  0x0118: 'MinSampleValue',\n  0x0110: 'Model',\n  0x00FE: 'NewSubfileType',\n  0x0112: 'Orientation',\n  0x0106: 'PhotometricInterpretation',\n  0x011C: 'PlanarConfiguration',\n  0x0128: 'ResolutionUnit',\n  0x0116: 'RowsPerStrip',\n  0x0115: 'SamplesPerPixel',\n  0x0131: 'Software',\n  0x0117: 'StripByteCounts',\n  0x0111: 'StripOffsets',\n  0x00FF: 'SubfileType',\n  0x0107: 'Threshholding',\n  0x011A: 'XResolution',\n  0x011B: 'YResolution',\n\n  // TIFF Extended\n  0x0146: 'BadFaxLines',\n  0x0147: 'CleanFaxData',\n  0x0157: 'ClipPath',\n  0x0148: 'ConsecutiveBadFaxLines',\n  0x01B1: 'Decode',\n  0x01B2: 'DefaultImageColor',\n  0x010D: 'DocumentName',\n  0x0150: 'DotRange',\n  0x0141: 'HalftoneHints',\n  0x015A: 'Indexed',\n  0x015B: 'JPEGTables',\n  0x011D: 'PageName',\n  0x0129: 'PageNumber',\n  0x013D: 'Predictor',\n  0x013F: 'PrimaryChromaticities',\n  0x0214: 'ReferenceBlackWhite',\n  0x0153: 'SampleFormat',\n  0x0154: 'SMinSampleValue',\n  0x0155: 'SMaxSampleValue',\n  0x022F: 'StripRowCounts',\n  0x014A: 'SubIFDs',\n  0x0124: 'T4Options',\n  0x0125: 'T6Options',\n  0x0145: 'TileByteCounts',\n  0x0143: 'TileLength',\n  0x0144: 'TileOffsets',\n  0x0142: 'TileWidth',\n  0x012D: 'TransferFunction',\n  0x013E: 'WhitePoint',\n  0x0158: 'XClipPathUnits',\n  0x011E: 'XPosition',\n  0x0211: 'YCbCrCoefficients',\n  0x0213: 'YCbCrPositioning',\n  0x0212: 'YCbCrSubSampling',\n  0x0159: 'YClipPathUnits',\n  0x011F: 'YPosition',\n\n  // EXIF\n  0x9202: 'ApertureValue',\n  0xA001: 'ColorSpace',\n  0x9004: 'DateTimeDigitized',\n  0x9003: 'DateTimeOriginal',\n  0x8769: 'Exif IFD',\n  0x9000: 'ExifVersion',\n  0x829A: 'ExposureTime',\n  0xA300: 'FileSource',\n  0x9209: 'Flash',\n  0xA000: 'FlashpixVersion',\n  0x829D: 'FNumber',\n  0xA420: 'ImageUniqueID',\n  0x9208: 'LightSource',\n  0x927C: 'MakerNote',\n  0x9201: 'ShutterSpeedValue',\n  0x9286: 'UserComment',\n\n  // IPTC\n  0x83BB: 'IPTC',\n\n  // ICC\n  0x8773: 'ICC Profile',\n\n  // XMP\n  0x02BC: 'XMP',\n\n  // GDAL\n  0xA480: 'GDAL_METADATA',\n  0xA481: 'GDAL_NODATA',\n\n  // Photoshop\n  0x8649: 'Photoshop',\n\n  // GeoTiff\n  0x830E: 'ModelPixelScale',\n  0x8482: 'ModelTiepoint',\n  0x85D8: 'ModelTransformation',\n  0x87AF: 'GeoKeyDirectory',\n  0x87B0: 'GeoDoubleParams',\n  0x87B1: 'GeoAsciiParams',\n\n  // LERC\n  0xC5F2: 'LercParameters',\n};\n\nexport const fieldTags = {};\nfor (const key in fieldTagNames) {\n  if (fieldTagNames.hasOwnProperty(key)) {\n    fieldTags[fieldTagNames[key]] = parseInt(key, 10);\n  }\n}\n\nexport const fieldTagTypes = {\n  256: 'SHORT',\n  257: 'SHORT',\n  258: 'SHORT',\n  259: 'SHORT',\n  262: 'SHORT',\n  273: 'LONG',\n  274: 'SHORT',\n  277: 'SHORT',\n  278: 'LONG',\n  279: 'LONG',\n  282: 'RATIONAL',\n  283: 'RATIONAL',\n  284: 'SHORT',\n  286: 'SHORT',\n  287: 'RATIONAL',\n  296: 'SHORT',\n  305: 'ASCII',\n  306: 'ASCII',\n  338: 'SHORT',\n  339: 'SHORT',\n  513: 'LONG',\n  514: 'LONG',\n  1024: 'SHORT',\n  1025: 'SHORT',\n  2048: 'SHORT',\n  2049: 'ASCII',\n  33550: 'DOUBLE',\n  33922: 'DOUBLE',\n  34665: 'LONG',\n  34735: 'SHORT',\n  34737: 'ASCII',\n  42113: 'ASCII',\n};\n\nexport const arrayFields = [\n  fieldTags.BitsPerSample,\n  fieldTags.ExtraSamples,\n  fieldTags.SampleFormat,\n  fieldTags.StripByteCounts,\n  fieldTags.StripOffsets,\n  fieldTags.StripRowCounts,\n  fieldTags.TileByteCounts,\n  fieldTags.TileOffsets,\n  fieldTags.SubIFDs,\n];\n\nexport const fieldTypeNames = {\n  0x0001: 'BYTE',\n  0x0002: 'ASCII',\n  0x0003: 'SHORT',\n  0x0004: 'LONG',\n  0x0005: 'RATIONAL',\n  0x0006: 'SBYTE',\n  0x0007: 'UNDEFINED',\n  0x0008: 'SSHORT',\n  0x0009: 'SLONG',\n  0x000A: 'SRATIONAL',\n  0x000B: 'FLOAT',\n  0x000C: 'DOUBLE',\n  // IFD offset, suggested by https://owl.phy.queensu.ca/~phil/exiftool/standards.html\n  0x000D: 'IFD',\n  // introduced by BigTIFF\n  0x0010: 'LONG8',\n  0x0011: 'SLONG8',\n  0x0012: 'IFD8',\n};\n\nexport const fieldTypes = {};\nfor (const key in fieldTypeNames) {\n  if (fieldTypeNames.hasOwnProperty(key)) {\n    fieldTypes[fieldTypeNames[key]] = parseInt(key, 10);\n  }\n}\n\nexport const photometricInterpretations = {\n  WhiteIsZero: 0,\n  BlackIsZero: 1,\n  RGB: 2,\n  Palette: 3,\n  TransparencyMask: 4,\n  CMYK: 5,\n  YCbCr: 6,\n\n  CIELab: 8,\n  ICCLab: 9,\n};\n\nexport const ExtraSamplesValues = {\n  Unspecified: 0,\n  Assocalpha: 1,\n  Unassalpha: 2,\n};\n\nexport const LercParameters = {\n  Version: 0,\n  AddCompression: 1,\n};\n\nexport const LercAddCompression = {\n  None: 0,\n  Deflate: 1,\n};\n\nexport const geoKeyNames = {\n  1024: 'GTModelTypeGeoKey',\n  1025: 'GTRasterTypeGeoKey',\n  1026: 'GTCitationGeoKey',\n  2048: 'GeographicTypeGeoKey',\n  2049: 'GeogCitationGeoKey',\n  2050: 'GeogGeodeticDatumGeoKey',\n  2051: 'GeogPrimeMeridianGeoKey',\n  2052: 'GeogLinearUnitsGeoKey',\n  2053: 'GeogLinearUnitSizeGeoKey',\n  2054: 'GeogAngularUnitsGeoKey',\n  2055: 'GeogAngularUnitSizeGeoKey',\n  2056: 'GeogEllipsoidGeoKey',\n  2057: 'GeogSemiMajorAxisGeoKey',\n  2058: 'GeogSemiMinorAxisGeoKey',\n  2059: 'GeogInvFlatteningGeoKey',\n  2060: 'GeogAzimuthUnitsGeoKey',\n  2061: 'GeogPrimeMeridianLongGeoKey',\n  2062: 'GeogTOWGS84GeoKey',\n  3072: 'ProjectedCSTypeGeoKey',\n  3073: 'PCSCitationGeoKey',\n  3074: 'ProjectionGeoKey',\n  3075: 'ProjCoordTransGeoKey',\n  3076: 'ProjLinearUnitsGeoKey',\n  3077: 'ProjLinearUnitSizeGeoKey',\n  3078: 'ProjStdParallel1GeoKey',\n  3079: 'ProjStdParallel2GeoKey',\n  3080: 'ProjNatOriginLongGeoKey',\n  3081: 'ProjNatOriginLatGeoKey',\n  3082: 'ProjFalseEastingGeoKey',\n  3083: 'ProjFalseNorthingGeoKey',\n  3084: 'ProjFalseOriginLongGeoKey',\n  3085: 'ProjFalseOriginLatGeoKey',\n  3086: 'ProjFalseOriginEastingGeoKey',\n  3087: 'ProjFalseOriginNorthingGeoKey',\n  3088: 'ProjCenterLongGeoKey',\n  3089: 'ProjCenterLatGeoKey',\n  3090: 'ProjCenterEastingGeoKey',\n  3091: 'ProjCenterNorthingGeoKey',\n  3092: 'ProjScaleAtNatOriginGeoKey',\n  3093: 'ProjScaleAtCenterGeoKey',\n  3094: 'ProjAzimuthAngleGeoKey',\n  3095: 'ProjStraightVertPoleLongGeoKey',\n  3096: 'ProjRectifiedGridAngleGeoKey',\n  4096: 'VerticalCSTypeGeoKey',\n  4097: 'VerticalCitationGeoKey',\n  4098: 'VerticalDatumGeoKey',\n  4099: 'VerticalUnitsGeoKey',\n};\n\nexport const geoKeys = {};\nfor (const key in geoKeyNames) {\n  if (geoKeyNames.hasOwnProperty(key)) {\n    geoKeys[geoKeyNames[key]] = parseInt(key, 10);\n  }\n}\n","const indexOfMatch = require(\"./index-of-match.js\");\n\nfunction findTagByName(xml, tagName, options) {\n  const debug = (options && options.debug) || false;\n\n  const startIndex = (options && options.startIndex) || 0;\n\n  if (debug) console.log(\"starting findTagByName with\", tagName, \" and \", options);\n\n  const start = indexOfMatch(xml, `\\<${tagName}[ \\>]`, startIndex);\n  if (debug) console.log(\"start:\", start);\n  if (start === -1) return undefined;\n\n  const afterStart = xml.slice(start + tagName.length);\n  let relativeEnd = indexOfMatch(afterStart, \"[ /]\" + tagName + \">\", 0);\n  const selfClosing = relativeEnd === -1;\n\n  if (selfClosing) {\n    relativeEnd = indexOfMatch(afterStart, \"[ /]>\", 0);\n  }\n\n  const end = start + tagName.length + relativeEnd + 1 + (selfClosing ? 0 : tagName.length) + 1;\n  if (debug) console.log(\"end:\", end);\n  if (end === -1) return undefined;\n\n  const outer = xml.slice(start, end);\n  // tag is like <gml:identifier codeSpace=\"OGP\">urn:ogc:def:crs:EPSG::32617</gml:identifier>\n\n  let inner;\n  if (selfClosing) {\n    inner = null;\n  } else {\n    inner = outer.slice(outer.indexOf(\">\") + 1, outer.lastIndexOf(\"<\"));\n  }\n\n  return { inner, outer, start, end };\n}\n\nmodule.exports = findTagByName;\n","const findTagByName = require(\"./find-tag-by-name.js\");\n\nfunction findTagsByName(xml, tagName, options) {\n  const tags = [];\n  const debug = (options && options.debug) || false;\n  let startIndex = (options && options.startIndex) || 0;\n  let tag;\n  while ((tag = findTagByName(xml, tagName, { debug, startIndex }))) {\n    startIndex = tag.end;\n    tags.push(tag);\n  }\n  if (debug) console.log(\"findTagsByName found\", tags.length, \"tags\");\n  return tags;\n}\n\nmodule.exports = findTagsByName;\n","function getAttribute(tag, attributeName, options) {\n  const debug = (options && options.debug) || false;\n  if (debug) console.log(\"getting \" + attributeName + \" in \" + tag);\n\n  const xml = typeof tag === \"object\" ? tag.outer : tag;\n\n  const pattern = `${attributeName}\\\\=\"\\([^\"]*\\)\"`;\n  if (debug) console.log(\"pattern:\", pattern);\n\n  const re = new RegExp(pattern);\n  const match = re.exec(xml);\n  if (debug) console.log(\"match:\", match);\n  if (match) return match[1];\n}\n\nmodule.exports = getAttribute;\n","function indexOfMatch(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index;\n  else return -1;\n}\n\nmodule.exports = indexOfMatch;\n"],"names":["uncurryThis","target","thisArg","args","ReflectApply","uncurryThisGetter","key","ReflectGetOwnPropertyDescriptor","get","apply","construct","ReflectConstruct","defineProperty","ReflectDefineProperty","ReflectGet","getOwnPropertyDescriptor","getPrototypeOf","ReflectGetPrototypeOf","has","ReflectHas","ownKeys","ReflectOwnKeys","set","ReflectSet","setPrototypeOf","ReflectSetPrototypeOf","Reflect","NativeNumber","Proxy","Number","isFinite","NumberIsFinite","isNaN","NumberIsNaN","iterator","SymbolIterator","species","SymbolSpecies","toStringTag","SymbolToStringTag","for","SymbolFor","Symbol","NativeObject","Object","create","ObjectDefineProperty","freeze","ObjectFreeze","is","ObjectIs","NativeArray","hasOwn","prototype","hasOwnProperty","Array","ArrayPrototype","isArray","NativeArrayPrototypeSymbolIterator","join","push","toLocaleString","ArrayPrototypeSymbolIterator","NativeArrayBuffer","Math","trunc","ArrayBuffer","NativeSharedArrayBuffer","isView","slice","SharedArrayBuffer","TypedArray","Uint8Array","TypedArrayPrototype","from","NativeUint32Array","keys","values","entries","reverse","fill","copyWithin","sort","subarray","Uint16Array","Uint32Array","NativeFloat32Array","Float32Array","ArrayIteratorPrototype","ArrayIteratorPrototypeNext","next","GeneratorPrototypeNext","IteratorPrototype","DataViewPrototype","DataView","DataViewPrototypeGetUint16","getUint16","SetPrototype","setUint16","TypeError","RangeError","Set","NativeWeakMap","add","WeakMap","WeakMapPrototype","WeakMapPrototypeGet","generators","value","generator","this","writable","configurable","buffer","floatView","uint32View","baseTable","shiftTable","i","e","mantissaTable","exponentTable","offsetTable","m","getFloat16","dataView","byteOffset","opts","float16bits","convertToNumber","array","arrayIterator","return","undefined","throw","registry","Map","addDecoder","cases","importFn","forEach","c","copyNewSize","width","height","samplesPerPixel","lerp","v0","v1","t","sum","start","end","s","arrayForType","format","bitsPerSample","size","Int8Array","Int16Array","Int32Array","Float64Array","Error","then","default","DataView64","constructor","arrayBuffer","_dataView","getUint64","offset","littleEndian","left","getUint32","right","combined","isSafeInteger","getInt64","isNegative","getUint8","carrying","byte","getInt8","getInt16","getInt32","getFloat32","getFloat64","DataSlice","sliceOffset","bigTiff","_sliceOffset","_littleEndian","_bigTiff","sliceTop","byteLength","covers","length","readUint8","readInt8","readUint16","readInt16","readUint32","readInt32","readFloat32","readFloat64","readUint64","readInt64","readOffset","AbortError","params","super","captureStackTrace","name","ArrayBufferSource","async","slices","signal","Promise","all","map","fetchSlice","fileSize","aborted","getFieldTypeLength","fieldType","getValues","dataSlice","count","readMethod","fieldTypeLength","call","TextDecoder","decode","ImageFileDirectory","fileDirectory","geoKeyDirectory","nextIFDByteOffset","GeoTIFFImageIndexError","index","GeoTIFF","options","window","imageWindow","resX","resY","bbox","firstImage","getImage","usedImage","imageCount","getImageCount","imgBBox","getBoundingBox","oX","oY","getOrigin","rX","rY","getResolution","usedBBox","allImages","image","SubfileType","subfileType","NewSubfileType","newSubfileType","a","b","getWidth","imgResX","imgResY","getHeight","wnd","imageResX","imageResY","round","min","max","readRasters","source","firstIFDOffset","cache","ifdRequests","ghostValues","fallbackSize","fetch","entrySize","offsetSize","getSlice","numDirEntries","byteSize","entryCount","fieldTag","typeCount","fieldValues","valueOffset","actualOffset","rawGeoKeyDirectory","GeoKeyDirectory","location","substring","parseGeoKeyDirectory","parseFileDirectoryAt","requestIFD","previousIfd","ifd","geoKeys","tiles","isTiled","StripOffsets","planarConfiguration","PlanarConfiguration","getFileDirectory","getGeoKeys","ImageWidth","ImageLength","getSamplesPerPixel","SamplesPerPixel","getTileWidth","TileWidth","getTileHeight","TileLength","RowsPerStrip","getBlockWidth","getBlockHeight","y","getBytesPerPixel","bytes","BitsPerSample","getSampleByteSize","ceil","getReaderForSample","sampleIndex","SampleFormat","getSampleFormat","getBitsPerSample","getArrayForSample","x","sample","poolOrDecoder","numTilesPerRow","numTilesPerCol","byteCount","TileOffsets","TileByteCounts","StripByteCounts","request","data","sampleFormat","needsNormalization","inBuffer","tileWidth","tileHeight","view","samplesToTransfer","outArray","bitMask","parseInt","repeat","pixelBitSkip","bitsPerLine","lineBitOffset","pixelBitOffset","bitOffset","outIndex","floor","innerBitOffset","raw","normalizeArray","samples","valueArrays","interleave","resampleMethod","imageWidth","imageHeight","minXTile","maxXTile","minYTile","maxYTile","windowWidth","bytesPerPixel","srcSampleOffsets","sampleReaders","promises","yTile","xTile","si","promise","getTileOrStrip","tile","blockHeight","firstLine","firstCol","lastLine","lastCol","reader","ymax","xmax","pixelOffset","windowCoordinate","resampled","valueArray","inWidth","inHeight","outWidth","outHeight","method","toLowerCase","relX","relY","newArray","cy","cx","resampleNearestInterleaved","rawY","yl","yh","rawX","tx","xl","xh","ll","hl","lh","hh","resampleBilinearInterleaved","resampleInterleaved","resampleNearest","resampleBilinear","resample","pool","fillValue","numPixels","reject","Compression","getDecoder","_readRaster","enableAlpha","pi","PhotometricInterpretation","ExtraSamples","subOptions","raster","rgbRaster","j","fromWhiteIsZero","fromBlackIsZero","colorMap","greenOffset","blueOffset","mapIndex","fromPalette","ColorMap","cmykRaster","k","fromCMYK","yCbCrRaster","Uint8ClampedArray","cb","cr","fromYCbCr","cieLabRaster","r","g","z","fromCIELab","red","green","blue","getTiePoints","ModelTiepoint","tiePoints","getGDALMetadata","metadata","GDAL_METADATA","string","items","filter","item","inner","getGDALNoData","GDAL_NODATA","modelTransformation","ModelTransformation","referenceImage","modelPixelScale","ModelPixelScale","refResX","refResY","refResZ","pixelIsArea","GTRasterTypeGeoKey","origin","resolution","x1","y1","x2","y2","hasNext","detectionString","heuristicAreaSize","split","metadataSize","fullString","line","static","headerData","BOM","magicNumber","close","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","ft","to_meter","ignoredChar","match","obj","testkey","lkey","replace","defData","paramName","paramVal","paramOutname","self","paramObj","v","trim","reduce","p","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","whitespace","latin","keyword","endThings","digets","Parser","text","level","place","root","stack","currentObject","state","mapit","unshift","thing","out","newObj","sExpr","shift","convert","d2r","input","wkt","lisp","output","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","outName","inName","rename","cleanWKT","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","defs","that","arguments","def","charAt","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","global","codeWords","codes","destination","property","eccent","sinphi","cosphi","con","sqrt","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","init","es","cos","msfnz","forward","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","identity","pt","projs","merc","longlat","projStore","len","n","ellipseName","ellipse","datumName","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","String","fromCharCode","mapNodes","nodes","longitudeShift","latitudeShift","readGridHeader","isLittleEndian","parent","lowerLatitude","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","code","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","parseCode","ourProj","projections","datumDef","a2","b2","sphere_","ecc","ep2","getNadgrids","datumObj","datum_type","grids","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","checkParams","applyGridShift","point","NaN","attemptedGrids","subgrid","subgrids","epsilon","del","minX","minY","maxX","lim","maxY","applySubgridShift","pin","ct","val","tb","nadInterpolate","dif","inx","indx","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","checkCoord","num","transform","dest","enforceAxis","wgs84","toPoint","checkSanity","checkNotWGS","adjust_axis","compareDatums","source_a","source_es","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","datum_transform","transformer","to","coords","transformedArray","concat","splice","checkProj","oProj","fromProj","toProj","coord","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","mgrs","UTMtoLL","toUpperCase","bottom","top","accuracy","utm","column","row","colOrigin","rowOrigin","colInt","rowInt","rollover","easting","northing","setParm","seasting","snorthing","zoneNumber","zoneLetter","get100kSetForZone","charCodeAt","encode","eccPrimeSquared","N","T","C","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","LetterDesignator","UTMEasting","UTMNorthing","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","en","sphi","cphi","arg","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","temp","h","asin","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hr","hi1","hr1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","hypot","log1py","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","V","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","proj4","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","poly3_val","coefs","NODES","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","Proj","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","subHeader","lngColumnCount","latColumnCount","readSubgrids","nadgrid","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","LeafletGeotiff","ImageOverlay","colorscale","domainMin","domainMax","clampLow","clampHigh","classes","band","clip","style","className","nCanvas","_initImage","DomUtil","canvas","Util","initialize","setURL","bounds","_map","latLngToLayerPoint","_bounds","setBand","setClip","setOpacity","setColorscale","setDomainMin","setDomainMax","setClampLow","setClampHigh","setClasses","setStyle","setClassName","oldClass","newClass","isClockwise","getIndexForLatLng","xmin","_raster","lng","yd","xd","getValueAtLatLng","_setScale","chroma","_reset","_getData","latLngBounds","response","fromSource","makeBufferSource","tiff","meta","GeographicTypeGeoKey","ProjectedCSTypeGeoKey","projection","resolutionX","resolutionY","pixelHeight","pixelWidth","originX","originY","ymin","yOffset","yPctOffset","yHeight","yminp","ymaxp","y0p","yPct","y1p","rst","_drawImage","ctx","_canvasses","getContext","id","rIdx","color","_scale","idx","opacity","moved","LeafletGeoTIFFOverlay","nProps","getOptions","props","toProps","fromProps","MapLayer","withLeaflet","GeoTIFFOverlay","click_lat_lng_val","click_lat_lng_idx","dbl_click_lat_lng_val","dbl_click_lat_lng_idx","Component","fieldTagNames","fieldTags","arrayFields","StripRowCounts","SubIFDs","fieldTypeNames","fieldTypes","photometricInterpretations","WhiteIsZero","BlackIsZero","RGB","Palette","TransparencyMask","CMYK","YCbCr","CIELab","ICCLab","ExtraSamplesValues","Unspecified","Assocalpha","Unassalpha","LercParameters","Version","AddCompression","LercAddCompression","None","Deflate","geoKeyNames","indexOfMatch","module","exports","xml","tagName","debug","startIndex","afterStart","relativeEnd","selfClosing","outer","lastIndexOf","findTagByName","tags","tag","attributeName","pattern","RegExp","exec"],"sourceRoot":""}